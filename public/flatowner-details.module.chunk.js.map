{"version":3,"sources":["/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details-routing.module.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details.component.html","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details.component.scss","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details.component.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details.module.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/assets/images/flatowner.png","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/node_modules/css-loader/lib/url/escape.js"],"names":[],"mappings":"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","file":"flatowner-details.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlatownerDetailsComponent } from './flatowner-details.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: FlatownerDetailsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FlatownerDetailsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details-routing.module.ts","module.exports = \"<toaster-container></toaster-container>\\n\\n<div [@routerTransition] class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                    <i class=\\\"fa fa-dashboard\\\"></i> <a href=\\\"Javascript:void(0)\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n                </li>\\n    \\n                <li class=\\\"breadcrumb-item active\\\"><i class=\\\"fa fa-list-ol\\\"></i> Flat Details</li>\\n            </ol>\\n        </div>\\n    </div>\\n<div class=\\\" row\\\">\\n\\n  <div class=\\\"col-md-12\\\">\\n    <mat-card class=\\\"example-card\\\">\\n        <div class=\\\"pull-right\\\" *ngIf=\\\"!chairmanexists\\\"><button class=\\\" btn btn-warning buttoncolor \\\" (click)=\\\"openFlatOwnerEditDialog();\\\"  style=\\\"color:white;\\\" mat-button><i class=\\\"fa fa-edit \\\" ></i> Edit</button>\\n          <button  class=\\\" btn btn-success buttoncolor\\\" (click)=\\\"openNewFlatownerDialog()\\\" style=\\\"color:white;\\\" mat-button><i class=\\\"fa fa-plus \\\" ></i> Flat Owner</button>\\n          <button *ngIf=\\\"!tenantexists\\\" class=\\\" btn btn-success buttoncolor\\\" (click)=\\\"openNewTenantDialog()\\\" style=\\\"color:white;\\\" mat-button><i class=\\\"fa fa-plus \\\" ></i> Tenant</button>\\n          <button *ngIf=\\\"!memberexists\\\" class=\\\" btn btn-success buttoncolor\\\" (click)=\\\"openNewMemberDialog()\\\" style=\\\"color:white;\\\" mat-button><i class=\\\"fa fa-plus \\\" ></i> Member</button>\\n\\n\\n        </div> \\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>Flat Details        \\n        </mat-card-title>\\n        <mat-card-subtitle>Flatowner details</mat-card-subtitle>\\n       \\n\\n      </mat-card-header>\\n      <mat-card-content>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1\\\">\\n\\n          </div>\\n          <div class=\\\"col-md-5\\\">\\n              <label>Flat NO: </label> {{flat_no}}<br>\\n              <label>Flat-Owner Name: </label> {{flatowner_name}}<br>\\n              <label>Contact:</label> {{flatowner_contact}}<br>\\n            </div>\\n            <div class=\\\"col-md-5\\\">\\n                <label>Floor NO: </label> {{floor_no}}<br>\\n                <label>Email Id:</label> {{flatowner_email}}<br>\\n              </div>\\n        </div>\\n\\n          \\n\\n      </mat-card-content>\\n\\n      \\n    </mat-card>\\n  </div>\\n</div>\\n<br>\\n<div class=\\\"row\\\">\\n\\n\\n \\n\\n      <div class=\\\"col-md-6\\\" *ngIf=\\\"tenantexists\\\">\\n          <mat-card class=\\\"example-card\\\">\\n              <button *ngIf=\\\"!chairmanexists\\\" class=\\\" btn btn-success buttoncolor pull-right\\\" [disabled]=\\\"!activeNewTenant\\\" matTooltip=\\\"Disable All Tenant to Add Tenant!\\\" matTooltipPosition=\\\"above\\\" (click)=\\\"openNewTenantDialog()\\\"  style=\\\"color:white;\\\" mat-button><i class=\\\"fa fa-plus \\\" ></i>  Tenant</button>\\n\\n          <mat-card-header>\\n\\n              <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n              <mat-card-title>Tenant Details        \\n                </mat-card-title>\\n                </mat-card-header>\\n                </mat-card>\\n                  <div class=\\\"example-container mat-elevation-z8\\\">\\n  \\n                      <mat-table [dataSource]=\\\"tenant_dataSource\\\" matSort>\\n                              <!-- Checkbox Column -->\\n                      <ng-container matColumnDef=\\\"select\\\" >\\n                          <mat-header-cell *matHeaderCellDef >\\n                            <mat-checkbox color=\\\"primary\\\" matTooltip=\\\"Select All Rows!\\\" matTooltipPosition=\\\"above\\\"  (change)=\\\"$event ? tenant_masterToggle() : null\\\"\\n                                          [checked]=\\\"tenant_selection.hasValue() && tenant_isAllSelected()\\\"\\n                                          [indeterminate]=\\\"tenant_selection.hasValue() && !tenant_isAllSelected()\\\">\\n                            </mat-checkbox>\\n                          </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let row\\\">\\n                            <mat-checkbox color=\\\"primary\\\" matTooltip=\\\"Select This Row!\\\" matTooltipPosition=\\\"above\\\"  (click)=\\\"$event.stopPropagation()\\\"\\n                                          (change)=\\\"$event ? tenant_selection.toggle(row) : null\\\"\\n                                          [checked]=\\\"tenant_selection.isSelected(row)\\\">\\n                            </mat-checkbox>\\n                          </mat-cell>\\n                        </ng-container>\\n                    \\n\\n                    \\n                        <!-- Name Column -->\\n                        <ng-container matColumnDef=\\\"name\\\">\\n                          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let row\\\"> {{row.tenant_name}} </mat-cell>\\n                        </ng-container>\\n                    \\n                          <!-- Email Column -->\\n                          <ng-container matColumnDef=\\\"email\\\">\\n                          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.email\\\"> {{row.email}} </mat-cell>\\n                          </ng-container>\\n                  \\n                          <!-- Contact Column -->\\n                        <ng-container matColumnDef=\\\"contact\\\">\\n                          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Contact </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.contact\\\"> {{row.contact}} </mat-cell>\\n                        </ng-container>\\n\\n                        <!-- Status Column -->\\n  \\n                        <ng-container matColumnDef=\\\"tenant_status\\\">\\n                            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let row\\\" >\\n                              \\n                                              \\n                                <mat-slide-toggle checked={{row.tenant_status}} [disabled]=\\\"chairmanexists\\\"  (change)=\\\"changeTenantStatus(row.tenant_status,row._id)\\\" color=\\\"primary\\\" matTooltip=\\\"change the status!\\\" matTooltipPosition=\\\"above\\\"></mat-slide-toggle>\\n                            \\n                            </mat-cell>\\n                            </ng-container>\\n                  \\n                          <!-- Actions Column -->\\n                          <ng-container matColumnDef=\\\"actions\\\">\\n                          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Actions </mat-header-cell>\\n                          <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.details\\\"><button class=\\\"btn btn-parimary\\\" (click)=\\\"openTenantEditDialog(row)\\\"><i class=\\\"fa fa-pencil\\\"></i> Edit</button>\\n                          </mat-cell>\\n                          </ng-container>\\n                    \\n                        <mat-header-row class=\\\"headertext\\\" *matHeaderRowDef=\\\"tenant_displayedColumns\\\"></mat-header-row>\\n                        <mat-row *matRowDef=\\\"let row; columns: tenant_displayedColumns;\\\">\\n                        </mat-row>\\n                      </mat-table>\\n                    \\n                      <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                    </div>\\n\\n        </div>\\n        <div class=\\\"col-md-6\\\" *ngIf=\\\"memberexists\\\">\\n            <mat-card class=\\\"example-card\\\">\\n                <button *ngIf=\\\"!chairmanexists\\\" class=\\\" btn btn-success buttoncolor pull-right\\\" (click)=\\\"openNewMemberDialog()\\\" style=\\\"color:white;\\\" mat-button><i class=\\\"fa fa-plus \\\" ></i>  Member</button>\\n  \\n            <mat-card-header>\\n  \\n                <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n                <mat-card-title>Member Details        \\n                  </mat-card-title>\\n                  </mat-card-header>\\n                  </mat-card>\\n                    <div class=\\\"example-container mat-elevation-z8\\\">\\n    \\n                        <mat-table [dataSource]=\\\"member_dataSource\\\" matSort>\\n                                <!-- Checkbox Column -->\\n                        <ng-container matColumnDef=\\\"select\\\" >\\n                            <mat-header-cell *matHeaderCellDef >\\n                              <mat-checkbox matTooltip=\\\"Select All Rows!\\\" matTooltipPosition=\\\"above\\\"  (change)=\\\"$event ? member_masterToggle() : null\\\"\\n                                            [checked]=\\\"member_selection.hasValue() && member_isAllSelected()\\\"\\n                                            [indeterminate]=\\\"member_selection.hasValue() && !member_isAllSelected()\\\">\\n                              </mat-checkbox>\\n                            </mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let row\\\">\\n                              <mat-checkbox matTooltip=\\\"Select This Row!\\\" matTooltipPosition=\\\"above\\\"  (click)=\\\"$event.stopPropagation()\\\"\\n                                            (change)=\\\"$event ? member_selection.toggle(row) : null\\\"\\n                                            [checked]=\\\"member_selection.isSelected(row)\\\">\\n                              </mat-checkbox>\\n                            </mat-cell>\\n                          </ng-container>\\n                      \\n  \\n                      \\n                          <!-- Name Column -->\\n                          <ng-container matColumnDef=\\\"name\\\">\\n                            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let row\\\"> {{row.flatmember_name}} </mat-cell>\\n                          </ng-container>\\n                      \\n                            <!-- Email Column -->\\n                            <ng-container matColumnDef=\\\"email\\\">\\n                            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.email\\\"> {{row.email}} </mat-cell>\\n                            </ng-container>\\n                    \\n                            <!-- Contact Column -->\\n                          <ng-container matColumnDef=\\\"contact\\\">\\n                            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Contact </mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.contact\\\"> {{row.contact}} </mat-cell>\\n                          </ng-container>\\n  \\n                          <!-- Status Column -->\\n    \\n                          <ng-container matColumnDef=\\\"member_status\\\">\\n                              <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\n                              <mat-cell *matCellDef=\\\"let row\\\" >\\n                                \\n                                                \\n                                  <mat-slide-toggle checked={{row.flatmember_status}} [disabled]=\\\"chairmanexists\\\"  (change)=\\\"changeMemberStatus(row.flatmember_status,row._id)\\\" color=\\\"primary\\\" matTooltip=\\\"change the status!\\\" matTooltipPosition=\\\"above\\\"></mat-slide-toggle>\\n                              \\n                              </mat-cell>\\n                              </ng-container>\\n                    \\n                            <!-- Actions Column -->\\n                            <ng-container matColumnDef=\\\"actions\\\">\\n                            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Actions </mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.details\\\"><button class=\\\"btn btn-parimary\\\" (click)=\\\"openMemberEditDialog(row)\\\"><i class=\\\"fa fa-pencil\\\"></i> Edit</button>\\n                            </mat-cell>\\n                            </ng-container>\\n                      \\n                          <mat-header-row class=\\\"headertext\\\" *matHeaderRowDef=\\\"member_displayedColumns\\\"></mat-header-row>\\n                          <mat-row *matRowDef=\\\"let row; columns: member_displayedColumns;\\\">\\n                          </mat-row>\\n                        </mat-table>\\n                      \\n                        <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator> -->\\n                      </div>\\n  \\n          </div>\\n\\n\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details.component.html\n// module id = ../../../../../src/app/layout/flatowner-details/flatowner-details.component.html\n// module chunks = flatowner-details.module","var escape = require(\"../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-card {\\n  max-width: 100%; }\\n\\n.example-header-image {\\n  background-image: url(\" + escape(require(\"../../../assets/images/flatowner.png\")) + \");\\n  background-size: cover; }\\n\\n.mat-dialog-content {\\n  background-color: lightblue; }\\n\\n.mat-dialog-content form {\\n    padding: 1% 2%; }\\n\\n.example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px; }\\n\\n.example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n\\n.mat-form-field {\\n  font-size: 14px; }\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n\\n.headertext {\\n  font-size: large;\\n  font-style: bold;\\n  color: black;\\n  font-size: 12px; }\\n\\n.mat-cell {\\n  font-size: 11px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details.component.scss\n// module id = ../../../../../src/app/layout/flatowner-details/flatowner-details.component.scss\n// module chunks = flatowner-details.module","import { Component, OnInit, ViewChild, Inject} from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { FormControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog,MatDialogRef, MAT_DIALOG_DATA, VERSION, MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ToasterService} from 'angular5-toaster';\nimport { mixinColor } from '@angular/material/core/typings/common-behaviors/color';\n\n@Component({\n  selector: 'app-flatowner-details',\n  templateUrl: './flatowner-details.component.html',\n  styleUrls: ['./flatowner-details.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class FlatownerDetailsComponent implements OnInit {\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n  flatowner = JSON.parse(localStorage['flatowner']);\n\n  chairman;\n  chairmanexists: boolean = false;\n\n  flatownerdetails: any;\n  flat_no: string;\n  floor_no: string;\n  flatowner_name: string;\n  flatowner_email: string;\n  flatowner_contact: string;\n\n  response;\n owner_id= this.flatowner._id;\n  //Tenant Table\n\n tenant_displayedColumns = ['select', 'name', 'email', 'contact','tenant_status', 'actions'];\n tenant_dataSource: MatTableDataSource<Tenant>;\n  tenant_selection = new SelectionModel<Tenant>(true, []);\n\n  //Member table\n  member_displayedColumns = ['select', 'name', 'email', 'contact','member_status', 'actions'];\n  member_dataSource: MatTableDataSource<Member>;\n  member_selection = new SelectionModel<Member>(true, []);\n\n\ntenant: Tenant[];\nactive_tenant;\nactiveNewTenant: boolean =false;\ntenant_id: string;\ntenantexists = false;\n\nmember: Member[];\nmemberexists= false;\nflatmember_owner_id: string = this.flatowner._id;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  private toasterService: ToasterService;\n\n  constructor(private http: HttpClient,\n    public dialog: MatDialog,\n    toasterService: ToasterService) {\n      if (localStorage.getItem('chairman')) {\n\n        this.chairman = JSON.parse(localStorage['chairman']);\n        this.chairmanexists = true;\nconsole.log('ChairmanExists:' + this.chairmanexists);\n\n    }\n    this.getFlatownerData();\n\n      this.toasterService = toasterService;\n\n\n    \n      this.checkInactivetenant();\n   }\n\n  ngOnInit() {\n\n  }\n\n  getFlatownerData(){\n    this.http.get('api/flatowner/' + this.flatowner.Flat_id._id).subscribe(data=> {\n    if(data){\n      this.flatownerdetails = data;\n\n      console.log(this.flatownerdetails);\n      localStorage.setItem('flatowner', JSON.stringify(this.flatownerdetails));\n\n      this.flat_no= this.flatownerdetails.Flat_id.flat_no;\n      this.floor_no= this.flatownerdetails.Flat_id.floor_no;\n      this.flatowner_name= this.flatownerdetails.flatowner_name;\n      this.flatowner_email= this.flatownerdetails.email;\n      this.flatowner_contact= this.flatownerdetails.contact;\n      this.getTenantData();\n      this.getFlatmemberData();\n    }\n   \n     });\n  \n  }\n  getTenantData(){\n    this.http.get<Tenant[]>('api/tanentlistbyflatowner/' + this.flatowner._id).subscribe(data=> {\n      this.tenant = data;  \n      console.log(this.tenant);\n      if(this.tenant.length > 0){\n        this.tenantexists = true;\n        this.tenant_dataSource = new MatTableDataSource(data);\n        this.tenant_dataSource.paginator = this.paginator;\n       this.tenant_dataSource.sort = this.sort;\n\n      }\n \n    });\n  }\n\n  checkInactivetenant(){\n    this.http.get('api/inactivetanentbyflatowner/' + this.flatowner._id).subscribe(data=> {\n      var response:any = data;\n      if(response.success == true){\n       this.activeNewTenant = true;\n\n      }\n      else{\n       this.activeNewTenant = false;\n\n      }\n      console.log(this.activeNewTenant)  \n\n   });\n  }\n\n  checkInactiveMember(){\n    this.http.get('api/inactivetanentbyflatowner/' + this.flatowner._id).subscribe(data=> {\n      var response:any = data;\n      if(response.success == true){\n       this.activeNewTenant = true;\n\n      }\n      else{\n       this.activeNewTenant = false;\n\n      }\n      console.log(this.activeNewTenant)  \n\n   });\n  }\n\n  changeTenantStatus(tenant,id){\n\n    tenant=! tenant;\n     const tenant_details ={\n       tenant_id: id,\n      status: tenant\n     };\n     console.log(tenant_details);\n\n     \n    this.http.put('api/updatetenantstatus/' + this.flatowner._id , tenant_details).subscribe(data=> {\n     var response:any = data;\n     if(response.success == true){\n      this.toasterService.pop('success', response.message);\n\n    }\n    else{\n      this.toasterService.pop('error', response.message);  \n\n    }\n        });\n        this.http.get('api/inactivetanentbyflatowner/' + this.flatowner._id).subscribe(data=> {\n          var response:any = data;\n          console.log(data);\n          if(response.success == true){\n           this.activeNewTenant = true;\n           this.toasterService.pop('Info', \" Now Flat Owner Will handle Account\");  \n\n          }\n          else{\n           this.activeNewTenant = false;\n\n          }\n    \n       });\n\n      this.getTenantData();\n       this.getFlatmemberData();\n\n  }\n\n  changeMemberStatus(member,id){\n    console.log(member , id);\n    member=! member;\n     const member_details ={\n      status: member\n     };\n     console.log(member_details);\n\n     \n    this.http.put('api/updateflatmemberstatus/' + id , member_details).subscribe(data=> {\n\n     \n      var response:any = data;\n      console.log(data);\n      if(response.success == true){\n       this.activeNewTenant = true;\n       this.toasterService.pop('success', response.message);  \n\n      }\n      else{\n        this.toasterService.pop('error', response.message);  \n      }\n        });\n\n       this.getFlatmemberData();\n\n  }\n\n\n\n  getFlatmemberData(){\n    console.log(\"flat member method is get called\");\n    this.http.get<Tenant[]>('api/activetanentbyflatowner/' + this.flatowner._id).subscribe(data=> {\n      console.log(data);\n    if(data){\n\n      this.active_tenant=data;\n\n        this.tenant_id = this.active_tenant._id;\n        this.flatmember_owner_id = this.active_tenant._id;\n        console.log(this.active_tenant);\n\n\n      \n      \n \n    this.http.get<Member[]>('api/memberlistbytenant/' + this.tenant_id).subscribe(data=> {\n      this.member = data;  \n      if(this.member.length > 0){\n      this.memberexists = true;\n      this.member_dataSource = new MatTableDataSource(data);\n      this.member_dataSource.paginator = this.paginator;\n     this.member_dataSource.sort = this.sort;\n      }\n      else{\n        this.memberexists = false;\n\n      }\n    });\n  }\n  else{\n\n    this.http.get<Member[]>('api/memberlistbyflatowner/' + this.flatowner._id).subscribe(data=> {\n      this.member = data;  \n      if(this.member.length > 0){\n        this.memberexists = true;\n        this.member_dataSource = new MatTableDataSource(data);\n        this.member_dataSource.paginator = this.paginator;\n       this.member_dataSource.sort = this.sort;\n\n      }\n      else{\n        this.memberexists = false;\n\n      }\n\n\n \n    });\n  }\n\n  });\n  }\n\n// Tenant Table operations\n  tenant_applyFilter(filterValue: string) {\n  filterValue = filterValue.trim(); // Remove whitespace\n  filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n  this.tenant_dataSource.filter = filterValue;\n}\n/** Whether the number of selected elements matches the total number of rows. */\ntenant_isAllSelected() {\n  const numSelected = this.tenant_selection.selected.length;\n  const numRows = this.tenant_dataSource.data.length;\n  return numSelected == numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\ntenant_masterToggle() {\n  this.tenant_isAllSelected() ?\n      this.tenant_selection.clear() :\n      this.tenant_dataSource.data.forEach(row => this.tenant_selection.select(row));\n}\n\n\n//member Table operations\nmember_applyFilter(filterValue: string) {\n  filterValue = filterValue.trim(); // Remove whitespace\n  filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n  this.member_dataSource.filter = filterValue;\n}\n/** Whether the number of selected elements matches the total number of rows. */\nmember_isAllSelected() {\n  const numSelected = this.member_selection.selected.length;\n  const numRows = this.member_dataSource.data.length;\n  return numSelected == numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmember_masterToggle() {\n  this.member_isAllSelected() ?\n      this.member_selection.clear() :\n      this.member_dataSource.data.forEach(row => this.member_selection.select(row));\n}\n\n\n//Add new Fllat Owner data Dialog box\nopenNewFlatownerDialog(): void {\n  var flat_id = this.flatowner.Flat_id._id\n  console.log(flat_id)\n  let dialogRef = this.dialog.open(NewFlatOwnerDialogComponent, {\n    height: '340px',\n    width: '630px',\n    data: {flat_id}\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n    console.log(result);\n    if(result == null || result == ''){\n\n    }\n\n    else{\n                //Register Block\n  this.http.post('api/addflatowner', result).subscribe(data => {\n      this.response= data;\n      if(this.response.success == true){\n        this.toasterService.pop('success', this.response.message);\n\n        this.getFlatownerData();\n        this.getTenantData();  \n        this.getFlatmemberData();\n\n      }\n      else{\n        this.toasterService.pop('error', this.response.message);  \n\n      }\n  });\n  this.checkInactivetenant();\n    }\n\n  });\n}\n\n//Add new data Dialog box\nopenNewTenantDialog(): void {\n  var flatowner_id = this.flatowner._id\n  let dialogRef = this.dialog.open(NewTenantDialogComponent, {\n    height: '340px',\n    width: '630px',\n    data: {flatowner_id}\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n    console.log(result);\n    if(result == null || result == ''){\n\n    }\n\n    else{\n                //Register Block\n  this.http.post('api/addtenant', result).subscribe(data => {\n      this.response= data;\n      if(this.response.success == true){\n        this.toasterService.pop('success', this.response.message);\n        this.getTenantData();  \n        this.getFlatmemberData();\n\n      }\n      else{\n        this.toasterService.pop('error', this.response.message);  \n\n      }\n  });\n  this.checkInactivetenant();\n    }\n\n  });\n}\n\n\n//Add new FlatMember data Dialog box\nopenNewMemberDialog(): void {\n  var parent_id = this.flatmember_owner_id;\n  var tenantisexitsts = this.tenantexists\n  console.log(parent_id, tenantisexitsts);\n  \n  let dialogRef = this.dialog.open(NewMemberDialogComponent, {\n    height: '250px',\n    width: '630px',\n    data: {parent_id, tenantisexitsts}\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n    console.log(result);\n    if(result == null || result == ''){\n\n    }\n\n    else{\n                //Register Block\n  this.http.post('api/addflatmember', result).subscribe(data => {\n      this.response= data;\n      if(this.response.success == true){\n        this.toasterService.pop('success', this.response.message);\n        this.getFlatmemberData();\n\n      }\n      else{\n        this.toasterService.pop('error', this.response.message);  \n\n      }\n  });\n  this.checkInactivetenant();\n    }\n\n  });\n}\n\n\n\n// Edit Dialog Box\nopenFlatOwnerEditDialog(): void {\n  var flatowner_id = this.flatowner._id\n  let dialogRef = this.dialog.open(FlatownerEditDialogComponent, {\n    height: '360px',\n    width: '260px',\n    data: {flatowner_id},\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n    this.getFlatownerData();\n    if(result == null || result == ''){\n\n    }\n\n    else{\n\n    }\n\n  });\n}\n\nopenTenantEditDialog(tenant): void {\n\n  let dialogRef = this.dialog.open(TenantEditDialogComponent, {\n    height: '360px',\n    width: '260px',\n    data: {tenant},\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n    this.getTenantData();\n    if(result == null || result == ''){\n\n    }\n\n    else{\n\n    }\n\n  });\n}\n\nopenMemberEditDialog(member): void {\n\n  let dialogRef = this.dialog.open(MemberEditDialogComponent, {\n    height: '360px',\n    width: '260px',\n    data: {member},\n  });\n  dialogRef.afterClosed().subscribe(result => {\n    console.log('The dialog was closed');\n    this.getFlatmemberData();\n    if(result == null || result == ''){\n\n    }\n\n    else{\n\n    }\n\n  });\n}\n\n\n\n\n}\n\n\n\n\n//  Edit Dialog Box Component for Flatowner\n\n\n@Component({\n  template: `\n  <div matDialogTitle>Edit Flat Owner Details</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"flatowner_name\" placeholder=\"Flat Owner's Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n          <div *ngIf=\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\" class=\"text-danger\">\n          <div *ngIf=\"nameCtrl.errors.required\"><small>Required</small></div>\n        </div>\n        </mat-form-field>\n        \n        <mat-form-field>\n        <input matInput [(ngModel)]=\"contact\" #contactinput placeholder=\"Contact\" (keypress)=\"NumPress($event)\" formControlName=\"contactCtrl\" minlength=\"10\" maxlength=\"10\" required>\n        <mat-hint align=\"end\">{{contactinput.value?.length || 0}}/10</mat-hint>\n        <div *ngIf=\"contactCtrl.invalid && (contactCtrl.dirty || contactCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"contactCtrl.errors.required\"><small>Required</small></div>    \n        <div *ngIf=\"contactCtrl.errors.minlength\"><small>Should be 10 Digit</small></div>\n        <div *ngIf=\"contactCtrl.errors.maxlength\"><small>Should be 10 Digit</small></div>\n    </div>\n\n    </mat-form-field>    \n    </form>\n    <br>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"pull-right\">\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancle</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" style=\"color:white;\" (click)=\"onSubmitClick()\" mat-button [disabled]=\"!firstFormGroup.valid\" matDialogClose>Update</button>\n\n  </mat-dialog-actions>`,\n\n})\nexport class FlatownerEditDialogComponent implements OnInit {\n\n\n  flatowner:any;\n\n  manager_id: string;\n  charsetOptions: any\n  firstFormGroup: FormGroup;\n\nresponse;\n  flatowner_name : string;\n    contact: number;\n    private toasterService: ToasterService;\n\n\n  constructor(   \n    private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<FlatownerDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    toasterService: ToasterService,\n  ) {\n    this.toasterService = toasterService;\n\n    this.firstFormGroup = this._formBuilder.group({\n      nameCtrl: ['', Validators.required],\n      contactCtrl:  ['', Validators.required],\n  \n    });\n\n  }\n  ngOnInit() {\n\n    this.http.get('api/flatowner/' + this.data.flatowner_id).subscribe(data=> {\n      this.flatowner= data;    \n    this.flatowner_name= this.flatowner.flatowner_name;\n    this.contact= this.flatowner.contact;\nconsole.log(this.flatowner);\n\n  });\n      }\n\n  get nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\n  get contactCtrl() { return this.firstFormGroup.get('contactCtrl'); }\n\n\n\n\n       //Only String (Name)\n       StringPress(event: any) {\n        const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n        }\n      }\n\n\n\n      //Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n\n      onSubmitClick(): void {\n        console.log(this.flatowner_name, this.contact);\n        const update_data= {\n          flatowner_name: this.flatowner_name,\n          contact: this.contact\n          \n        }\nconsole.log(update_data);\n            this.http.put('api/updateflatowner/' + this.flatowner._id, update_data).subscribe(data => {\n        this.response= data;\n        if(this.response.success == true){\n          this.toasterService.pop('success', this.response.message);\n\n        }\n        else{\n          this.toasterService.pop('error', this.response.message);  \n\n        }\n    });\n        this.dialogRef.close();\n           \n    \n      }\n\n}\n\n\n\n\n//  Edit Dialog Box Component for Tenant\n\n\n@Component({\n  template: `\n  <div matDialogTitle>Edit Tenant Details</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"tenant_name\" placeholder=\"Tenant's Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n          <div *ngIf=\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\" class=\"text-danger\">\n          <div *ngIf=\"nameCtrl.errors.required\"><small>Required</small></div>\n        </div>\n        </mat-form-field>\n        \n        <mat-form-field>\n        <input matInput [(ngModel)]=\"contact\" #contactinput placeholder=\"Contact\" (keypress)=\"NumPress($event)\" formControlName=\"contactCtrl\" minlength=\"10\" maxlength=\"10\" required>\n        <mat-hint align=\"end\">{{contactinput.value?.length || 0}}/10</mat-hint>\n        <div *ngIf=\"contactCtrl.invalid && (contactCtrl.dirty || contactCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"contactCtrl.errors.required\"><small>Required</small></div>    \n        <div *ngIf=\"contactCtrl.errors.minlength\"><small>Should be 10 Digit</small></div>\n        <div *ngIf=\"contactCtrl.errors.maxlength\"><small>Should be 10 Digit</small></div>\n    </div>\n\n    </mat-form-field>    \n    </form>\n    <br>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"pull-right\">\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancle</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" style=\"color:white;\" (click)=\"onSubmitClick()\" mat-button [disabled]=\"!firstFormGroup.valid\" matDialogClose>Update</button>\n\n  </mat-dialog-actions>`,\n\n})\nexport class TenantEditDialogComponent implements OnInit {\n\n\n  tenant:any;\n\n  manager_id: string;\n  charsetOptions: any\n  firstFormGroup: FormGroup;\n\nresponse;\n  tenant_name = this.data.tenant.tenant_name;\n    contact= this.data.tenant.contact;\n    private toasterService: ToasterService;\n\n\n  constructor(   \n    private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<FlatownerDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    toasterService: ToasterService,\n  ) {\n    this.toasterService = toasterService;\n\n    this.firstFormGroup = this._formBuilder.group({\n      nameCtrl: ['', Validators.required],\n      contactCtrl:  ['', Validators.required],\n  \n    });\n\n  }\n  ngOnInit() {\n\n  \n      }\n\n  get nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\n  get contactCtrl() { return this.firstFormGroup.get('contactCtrl'); }\n\n\n\n\n       //Only String (Name)\n       StringPress(event: any) {\n        const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n        }\n      }\n\n\n\n      //Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n\n      onSubmitClick(): void {\n        console.log(this.tenant_name, this.contact);\n        const update_data= {\n          tenant_name: this.tenant_name,\n          contact: this.contact\n          \n        }\nconsole.log(update_data);\n            this.http.put('api/updatetenant/' + this.data.tenant._id, update_data).subscribe(data => {\n        this.response= data;\n        if(this.response.success == true){\n          this.toasterService.pop('success', this.response.message);\n\n        }\n        else{\n          this.toasterService.pop('error', this.response.message);  \n\n        }\n    });\n        this.dialogRef.close();\n           \n    \n      }\n\n}\n\n\n\n\n//  Edit Dialog Box Component for Flat Member\n\n\n@Component({\n  template: `\n  <div matDialogTitle>Edit Tenant Details</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"flatmember_name\" placeholder=\"Flat Member's Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n          <div *ngIf=\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\" class=\"text-danger\">\n          <div *ngIf=\"nameCtrl.errors.required\"><small>Required</small></div>\n        </div>\n        </mat-form-field>\n        \n        <mat-form-field>\n        <input matInput [(ngModel)]=\"contact\" #contactinput placeholder=\"Contact\" (keypress)=\"NumPress($event)\" formControlName=\"contactCtrl\" minlength=\"10\" maxlength=\"10\" required>\n        <mat-hint align=\"end\">{{contactinput.value?.length || 0}}/10</mat-hint>\n        <div *ngIf=\"contactCtrl.invalid && (contactCtrl.dirty || contactCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"contactCtrl.errors.required\"><small>Required</small></div>    \n        <div *ngIf=\"contactCtrl.errors.minlength\"><small>Should be 10 Digit</small></div>\n        <div *ngIf=\"contactCtrl.errors.maxlength\"><small>Should be 10 Digit</small></div>\n    </div>\n\n    </mat-form-field>    \n    </form>\n    <br>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"pull-right\">\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancle</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" style=\"color:white;\" (click)=\"onSubmitClick()\" mat-button [disabled]=\"!firstFormGroup.valid\" matDialogClose>Update</button>\n\n  </mat-dialog-actions>`,\n\n})\nexport class MemberEditDialogComponent implements OnInit {\n\n\n  tenant:any;\n\n  firstFormGroup: FormGroup;\n\nresponse;\n  flatmember_name = this.data.member.flatmember_name;\n    contact= this.data.member.contact;\n    private toasterService: ToasterService;\n\n\n  constructor(   \n    private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<FlatownerDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    toasterService: ToasterService,\n  ) {\n    this.toasterService = toasterService;\n\n    this.firstFormGroup = this._formBuilder.group({\n      nameCtrl: ['', Validators.required],\n      contactCtrl:  ['', Validators.required],\n  \n    });\n\n  }\n  ngOnInit() {\n\n  \n      }\n\n  get nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\n  get contactCtrl() { return this.firstFormGroup.get('contactCtrl'); }\n\n\n\n\n       //Only String (Name)\n       StringPress(event: any) {\n        const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n        }\n      }\n\n\n\n      //Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n\n      onSubmitClick(): void {\n        console.log(this.flatmember_name, this.contact);\n        const update_data= {\n          flatmember_name: this.flatmember_name,\n          contact: this.contact\n          \n        }\nconsole.log(update_data);\n            this.http.put('api/updateflatmember/' + this.data.member._id, update_data).subscribe(data => {\n        this.response= data;\n        if(this.response.success == true){\n          this.toasterService.pop('success', this.response.message);\n\n        }\n        else{\n          this.toasterService.pop('error', this.response.message);  \n\n        }\n    });\n        this.dialogRef.close();\n           \n    \n      }\n\n}\n\n\n\n\n// Add new Flat Owner Dialog Box Component\n\n\n@Component({\n  template: `\n  <div matDialogTitle>Flat Owner Registration</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n       \n        <mat-form-field>\n          <input matInput [(ngModel)]=\"flatowner_name\" placeholder=\"Flat Owner Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n          <div *ngIf=\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\" class=\"text-danger\">\n          <div *ngIf=\"nameCtrl.errors.required\"><small>Required</small></div>\n        </div>\n        </mat-form-field>\n        \n        <mat-form-field>\n        <input matInput [(ngModel)]=\"contact\" #contactinput placeholder=\"Contact\" (keypress)=\"NumPress($event)\" formControlName=\"contactCtrl\" minlength=\"10\" maxlength=\"10\" required>\n        <mat-hint align=\"end\">{{contactinput.value?.length || 0}}/10</mat-hint>\n        <div *ngIf=\"contactCtrl.invalid && (contactCtrl.dirty || contactCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"contactCtrl.errors.required\"><small>Required</small></div>    \n        <div *ngIf=\"contactCtrl.errors.minlength\"><small>Should be 10 Digit</small></div>\n        <div *ngIf=\"contactCtrl.errors.maxlength\"><small>Should be 10 Digit</small></div>\n    </div>\n\n    </mat-form-field>\n\n        <mat-form-field>\n            <input matInput [(ngModel)]=\"email\" placeholder=\"Email\" formControlName=\"emailCtrl\" required>\n            <div *ngIf=\"emailCtrl.invalid && (emailCtrl.dirty || emailCtrl.touched)\" class=\"text-danger\">\n            <div *ngIf=\"emailCtrl.errors.required\"><small>Required</small></div>\n    <div *ngIf=\"(emailCtrl.dirty)\" class=\"text-danger\">        \n    <div *ngIf=\"emailCtrl.errors.email\"><small>Invalid</small></div>\n    </div>\n    </div>\n\n            </mat-form-field>\n             \n    <mat-form-field>\n        <input matInput type=\"password\" [(ngModel)]=\"password\"  #passwordinput placeholder=\"Password\" formControlName=\"passwordCtrl\" required>\n        <mat-hint align=\"end\">{{passwordinput.value?.length || 0}}/[Min 6 -Max 12]</mat-hint>\n        <div *ngIf=\"passwordCtrl.invalid && (passwordCtrl.dirty || passwordCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"passwordCtrl.errors.required\"><small>Required</small></div>\n        <div *ngIf=\"passwordCtrl.errors.minlength\"><small>At least 6 characters long</small></div>\n        <div *ngIf=\"passwordCtrl.errors.maxlength\"><small>Must not exceed 12 characters</small></div>\n      </div>   \n    </mat-form-field>\n\n    <mat-form-field>\n        <input matInput type=\"password\" name=\"confirm_password\" [(ngModel)]=\"confirm_password\" pattern={{this.password}} #confirmpasswrdinput placeholder=\"Confirm Password\" formControlName=\"confirmpasswordCtrl\" minlength=\"6\" maxlength=\"12\" required>\n        <mat-hint align=\"end\">{{confirmpasswrdinput.value?.length || 0}}</mat-hint>\n        <div *ngIf=\"confirmpasswordCtrl.invalid && (confirmpasswordCtrl.dirty || confirmpasswordCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"confirmpasswordCtrl.errors.required\"><small>Re-Enter the Password</small></div>\n        <div *ngIf=\"confirmpasswordCtrl.errors.pattern\"><small>Password is not match</small></div>\n      </div>  \n        </mat-form-field>\n\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"pull-right\">\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancle</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" style=\"color:white;\" (click)=\"onSubmitClick()\" mat-button [disabled]=\"!firstFormGroup.valid\" matDialogClose>Submit</button>\n\n  </mat-dialog-actions>`,\n\n})\nexport class NewFlatOwnerDialogComponent implements OnInit {\n\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n\n\n\n  firstFormGroup: FormGroup;\n\n\n  flatowner_name : string;\n  email : string;\n  contact: number;\n  password: string;\n  confirm_password : string;\n\n  constructor(   \n    private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<FlatownerDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n\n        \n  ) {\n   \n \n\n    this.firstFormGroup = this._formBuilder.group({\n      nameCtrl: ['', Validators.required],\n      emailCtrl: ['', [Validators.required, Validators.email]],\n      contactCtrl:  ['', Validators.required],\n      passwordCtrl: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]],\n      confirmpasswordCtrl: ['', [Validators.required, Validators.pattern]]\n    });\n\n  }\n  ngOnInit() {\n\n  }\n\n  get nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\n  get emailCtrl() { return this.firstFormGroup.get('emailCtrl'); }\n  get contactCtrl() { return this.firstFormGroup.get('contactCtrl'); }\n  get passwordCtrl() { return this.firstFormGroup.get('passwordCtrl'); }\n  get confirmpasswordCtrl() { return this.firstFormGroup.get('confirmpasswordCtrl'); }\n\n\n\n\n       //Only String (Name)\n       StringPress(event: any) {\n        const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n        }\n      }\n\n\n\n      //Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n\n      onSubmitClick(): void {\n        console.log(this.data.flat_id);\n        const flatownerdata = {\n          society_id: this.societyadmin.id,\n          flat_id: this.data.flat_id,\n          flatowner_name: this.flatowner_name,\n          flatowner_email : this.email,\n          flatowner_contact: this.contact,\n          flatowner_password : this.confirm_password\n        }\n        \n        this.dialogRef.close(flatownerdata);\n           \n    \n      }\n\n}\n\n\n\n\n\n\n\n// Add new Tenant Dialog Box Component\n\n\n@Component({\n  template: `\n  <div matDialogTitle>Tenant Registration</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n       \n        <mat-form-field>\n          <input matInput [(ngModel)]=\"tenant_name\" placeholder=\"Tenant Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n          <div *ngIf=\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\" class=\"text-danger\">\n          <div *ngIf=\"nameCtrl.errors.required\"><small>Required</small></div>\n        </div>\n        </mat-form-field>\n        \n        <mat-form-field>\n        <input matInput [(ngModel)]=\"contact\" #contactinput placeholder=\"Contact\" (keypress)=\"NumPress($event)\" formControlName=\"contactCtrl\" minlength=\"10\" maxlength=\"10\" required>\n        <mat-hint align=\"end\">{{contactinput.value?.length || 0}}/10</mat-hint>\n        <div *ngIf=\"contactCtrl.invalid && (contactCtrl.dirty || contactCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"contactCtrl.errors.required\"><small>Required</small></div>    \n        <div *ngIf=\"contactCtrl.errors.minlength\"><small>Should be 10 Digit</small></div>\n        <div *ngIf=\"contactCtrl.errors.maxlength\"><small>Should be 10 Digit</small></div>\n    </div>\n\n    </mat-form-field>\n\n        <mat-form-field>\n            <input matInput [(ngModel)]=\"email\" placeholder=\"Email\" formControlName=\"emailCtrl\" required>\n            <div *ngIf=\"emailCtrl.invalid && (emailCtrl.dirty || emailCtrl.touched)\" class=\"text-danger\">\n            <div *ngIf=\"emailCtrl.errors.required\"><small>Required</small></div>\n    <div *ngIf=\"(emailCtrl.dirty)\" class=\"text-danger\">        \n    <div *ngIf=\"emailCtrl.errors.email\"><small>Invalid</small></div>\n    </div>\n    </div>\n\n            </mat-form-field>\n             \n    <mat-form-field>\n        <input matInput type=\"password\" [(ngModel)]=\"password\"  #passwordinput placeholder=\"Password\" formControlName=\"passwordCtrl\" required>\n        <mat-hint align=\"end\">{{passwordinput.value?.length || 0}}/[Min 6 -Max 12]</mat-hint>\n        <div *ngIf=\"passwordCtrl.invalid && (passwordCtrl.dirty || passwordCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"passwordCtrl.errors.required\"><small>Required</small></div>\n        <div *ngIf=\"passwordCtrl.errors.minlength\"><small>At least 6 characters long</small></div>\n        <div *ngIf=\"passwordCtrl.errors.maxlength\"><small>Must not exceed 12 characters</small></div>\n      </div>   \n    </mat-form-field>\n\n    <mat-form-field>\n        <input matInput type=\"password\" name=\"confirm_password\" [(ngModel)]=\"confirm_password\" pattern={{this.password}} #confirmpasswrdinput placeholder=\"Confirm Password\" formControlName=\"confirmpasswordCtrl\" minlength=\"6\" maxlength=\"12\" required>\n        <mat-hint align=\"end\">{{confirmpasswrdinput.value?.length || 0}}</mat-hint>\n        <div *ngIf=\"confirmpasswordCtrl.invalid && (confirmpasswordCtrl.dirty || confirmpasswordCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"confirmpasswordCtrl.errors.required\"><small>Re-Enter the Password</small></div>\n        <div *ngIf=\"confirmpasswordCtrl.errors.pattern\"><small>Password is not match</small></div>\n      </div>  \n        </mat-form-field>\n\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"pull-right\">\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancle</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" style=\"color:white;\" (click)=\"onSubmitClick()\" mat-button [disabled]=\"!firstFormGroup.valid\" matDialogClose>Submit</button>\n\n  </mat-dialog-actions>`,\n\n})\nexport class NewTenantDialogComponent implements OnInit {\n\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n\n\n\n  firstFormGroup: FormGroup;\n\n\n  tenant_name : string;\n  email : string;\n  contact: number;\n  password: string;\n  confirm_password : string;\n\n  constructor(   \n    private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<FlatownerDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n\n        \n  ) {\n   \n \n\n    this.firstFormGroup = this._formBuilder.group({\n      nameCtrl: ['', Validators.required],\n      emailCtrl: ['', [Validators.required, Validators.email]],\n      contactCtrl:  ['', Validators.required],\n      passwordCtrl: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]],\n      confirmpasswordCtrl: ['', [Validators.required, Validators.pattern]]\n    });\n\n  }\n  ngOnInit() {\n\n  }\n\n  get nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\n  get emailCtrl() { return this.firstFormGroup.get('emailCtrl'); }\n  get contactCtrl() { return this.firstFormGroup.get('contactCtrl'); }\n  get passwordCtrl() { return this.firstFormGroup.get('passwordCtrl'); }\n  get confirmpasswordCtrl() { return this.firstFormGroup.get('confirmpasswordCtrl'); }\n\n\n\n\n       //Only String (Name)\n       StringPress(event: any) {\n        const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n        }\n      }\n\n\n\n      //Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n\n      onSubmitClick(): void {\n        console.log(this.data.flatowner_id);\n        const tenant = {\n          society_id: this.societyadmin.id,\n          flatowner_id: this.data.flatowner_id,\n          tenant_name: this.tenant_name,\n          tenant_email : this.email,\n          tenant_contact: this.contact,\n          tenant_password : this.confirm_password\n        }\n        \n        this.dialogRef.close(tenant);\n           \n    \n      }\n\n}\n\n\n\n\n\n// Add new Member Dialog Box Component\n\n\n@Component({\n  template: `\n  <div matDialogTitle>Flat Member Registration</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n       \n        <mat-form-field>\n          <input matInput [(ngModel)]=\"flatmember_name\" placeholder=\"Flat Member Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n          <div *ngIf=\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\" class=\"text-danger\">\n          <div *ngIf=\"nameCtrl.errors.required\"><small>Required</small></div>\n        </div>\n        </mat-form-field>\n        \n        <mat-form-field>\n        <input matInput [(ngModel)]=\"contact\" #contactinput placeholder=\"Contact\" (keypress)=\"NumPress($event)\" formControlName=\"contactCtrl\" minlength=\"10\" maxlength=\"10\" required>\n        <mat-hint align=\"end\">{{contactinput.value?.length || 0}}/10</mat-hint>\n        <div *ngIf=\"contactCtrl.invalid && (contactCtrl.dirty || contactCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"contactCtrl.errors.required\"><small>Required</small></div>    \n        <div *ngIf=\"contactCtrl.errors.minlength\"><small>Should be 10 Digit</small></div>\n        <div *ngIf=\"contactCtrl.errors.maxlength\"><small>Should be 10 Digit</small></div>\n    </div>\n\n    </mat-form-field>\n\n        <mat-form-field>\n            <input matInput [(ngModel)]=\"email\" placeholder=\"Email\" formControlName=\"emailCtrl\" required>\n            <div *ngIf=\"emailCtrl.invalid && (emailCtrl.dirty || emailCtrl.touched)\" class=\"text-danger\">\n            <div *ngIf=\"emailCtrl.errors.required\"><small>Required</small></div>\n    <div *ngIf=\"(emailCtrl.dirty)\" class=\"text-danger\">        \n    <div *ngIf=\"emailCtrl.errors.email\"><small>Invalid</small></div>\n    </div>\n    </div>\n\n            </mat-form-field>\n             \n\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"pull-right\">\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancle</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" style=\"color:white;\" (click)=\"onSubmitClick()\" mat-button [disabled]=\"!firstFormGroup.valid\" matDialogClose>Submit</button>\n\n  </mat-dialog-actions>`,\n\n})\nexport class NewMemberDialogComponent implements OnInit {\n\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n\n\n\n  firstFormGroup: FormGroup;\n\n\n  flatmember_name : string;\n  email : string;\n  contact: number;\n  password: string;\n  confirm_password : string;\n\n  constructor(   \n    private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<FlatownerDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n\n        \n  ) {\n   \n \n\n    this.firstFormGroup = this._formBuilder.group({\n      nameCtrl: ['', Validators.required],\n      emailCtrl: ['', [Validators.required, Validators.email]],\n      contactCtrl:  ['', Validators.required],\n\n    });\n\n  }\n  ngOnInit() {\n\n  }\n\n  get nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\n  get emailCtrl() { return this.firstFormGroup.get('emailCtrl'); }\n  get contactCtrl() { return this.firstFormGroup.get('contactCtrl'); }\n\n\n\n\n\n       //Only String (Name)\n       StringPress(event: any) {\n        const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n        }\n      }\n\n\n\n      //Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n\n      onSubmitClick(): void {\n\n        if(this.data.tenantisexitsts == true){\n          const flatmemberbytenant = {\n            society_id: this.societyadmin.id,\n            tenant_id: this.data.parent_id,\n            flatmember_name: this.flatmember_name,\n            flatmember_email : this.email,\n            flatmember_contact: this.contact,\n          }\n          \n          this.dialogRef.close(flatmemberbytenant);\n        }else if(this.data.tenantisexitsts == false) {\n\n          const flatmemberbtflatowner = {\n            society_id: this.societyadmin.id,\n            flatowner_id: this.data.parent_id,\n            flatmember_name: this.flatmember_name,\n            flatmember_email : this.email,\n            flatmember_contact: this.contact,\n          }\n          \n          this.dialogRef.close(flatmemberbtflatowner);\n        }\n\n           \n    \n      }\n\n}\n\n\n\n\n\n\n\ninterface Flatowner{\n\n}\n\ninterface Tenant{\n_id:any;\n}\ninterface Member{\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlatownerDetailsComponent, FlatownerEditDialogComponent, TenantEditDialogComponent, MemberEditDialogComponent,\n         NewFlatOwnerDialogComponent, NewTenantDialogComponent, NewMemberDialogComponent } from './flatowner-details.component';\nimport { FlatownerDetailsRoutingModule } from './flatowner-details-routing.module';\nimport { MatFormFieldModule, MatCardModule, MatButtonModule, MatCheckboxModule, MatInputModule, MatSelectModule, MatPaginatorModule, MatDialogModule, MatTableModule, MatSortModule, MatTooltipModule, MatSlideToggleModule } from '@angular/material';\nimport {ToasterModule } from 'angular5-toaster';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlatownerDetailsRoutingModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatTooltipModule,\n    ToasterModule,\n    MatSlideToggleModule\n\n\n\n\n  ],\n  entryComponents: [FlatownerEditDialogComponent, TenantEditDialogComponent, MemberEditDialogComponent,\n                    NewFlatOwnerDialogComponent, NewTenantDialogComponent, NewMemberDialogComponent],\n  declarations: [FlatownerDetailsComponent, FlatownerEditDialogComponent, TenantEditDialogComponent,\n                 MemberEditDialogComponent, NewFlatOwnerDialogComponent, NewTenantDialogComponent, NewMemberDialogComponent ]\n})\nexport class FlatownerDetailsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/flatowner-details/flatowner-details.module.ts","module.exports = __webpack_public_path__ + \"flatowner.a1d40c3876bd1460ff1e.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/assets/images/flatowner.png\n// module id = ../../../../../src/assets/images/flatowner.png\n// module chunks = flatowner-details.module","module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/node_modules/css-loader/lib/url/escape.js\n// module id = ../../../../css-loader/lib/url/escape.js\n// module chunks = styles flatowner-details.module"],"sourceRoot":"webpack:///"}