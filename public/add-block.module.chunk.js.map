{"version":3,"sources":["/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block-routing.module.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block.component.html","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block.component.scss","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block.component.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block.module.ts"],"names":[],"mappings":"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","file":"add-block.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddBlockComponent } from './add-block.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: AddBlockComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddBlockRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block-routing.module.ts","module.exports = \"<toaster-container></toaster-container>\\n<div [@routerTransition] class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xl-12\\\">\\n          <ol class=\\\"breadcrumb\\\">\\n              <li class=\\\"breadcrumb-item\\\">\\n                  <i class=\\\"fa fa-dashboard\\\"></i> <a href=\\\"Javascript:void(0)\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n              </li>\\n              <li class=\\\"breadcrumb-item\\\">\\n                <i class=\\\"fa fa-desktop\\\"></i> <a href=\\\"Javascript:void(0)\\\" [routerLink]=\\\"['/society_details']\\\">Society Details</a>\\n            </li>\\n              <li class=\\\"breadcrumb-item active\\\"><i class=\\\"fa fa-list-ol\\\"></i>Block List</li>\\n          </ol>\\n      </div>\\n  </div>\\n  <div class=\\\"example-header\\\">\\n        <mat-form-field>\\n          <input matTooltip=\\\"Search Block Details!\\\" matTooltipPosition=\\\"above\\\"  matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n        </mat-form-field>\\n        <div class=\\\"pull-right\\\">\\n            <button class=\\\" btn btn-danger\\\" matTooltip=\\\"Send Message!\\\" matTooltipPosition=\\\"above\\\"><i class=\\\"fa fa-paper-plane\\\"></i></button>\\n\\n            <button class=\\\"btn btn-success buttoncolor\\\" style=\\\"color:white;\\\" (click)=\\\"openDialog()\\\"  matTooltip=\\\"Register Block!\\\" matTooltipPosition=\\\"above\\\"  ><i class=\\\"fa fa-plus\\\"></i> Add BLock</button>\\n                \\n        </div>\\n\\n      </div>\\n      \\n      <div class=\\\"example-container mat-elevation-z8\\\">\\n      \\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n             <!-- Checkbox Column -->\\n    <ng-container matColumnDef=\\\"select\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox matTooltip=\\\"Select All Rows!\\\" matTooltipPosition=\\\"above\\\"  (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n          </mat-checkbox>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox matTooltip=\\\"Select This Row!\\\" matTooltipPosition=\\\"above\\\"  (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\">\\n          </mat-checkbox>\\n        </mat-cell>\\n      </ng-container>\\n      \\n          <!-- ID Column\\n          <ng-container matColumnDef=\\\"id\\\">\\n            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n          </ng-container> -->\\n      \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"block_name\\\">\\n            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.block_name}} </mat-cell>\\n          </ng-container>\\n      \\n          <!-- Location Column -->\\n          <ng-container matColumnDef=\\\"no_of_flats\\\">\\n            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Flats </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.flats\\\"> {{row.no_of_flats}} </mat-cell>\\n          </ng-container>\\n\\n\\n            <!-- Details Column -->\\n            <ng-container matColumnDef=\\\"details\\\">\\n            <mat-header-cell  class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Details </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.details\\\"><button routerLink=\\\"/society_details\\\" (click)=\\\"saveBlockId(row)\\\"  matTooltip=\\\"View Block's Details!\\\" matTooltipPosition=\\\"above\\\" class=\\\"btn btn-primary buttoncolor\\\" style=\\\"color:white;\\\"><i  class=\\\"fa fa-eye\\\"></i> View</button>\\n            </mat-cell>\\n            </ng-container>\\n      \\n          <mat-header-row class=\\\"headertext\\\" *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n          </mat-row>\\n        </mat-table>\\n      \\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n      </div>\\n  </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block.component.html\n// module id = ../../../../../src/app/layout/add-block/add-block.component.html\n// module chunks = add-block.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-dialog-content {\\n  background-color: lightblue; }\\n  .mat-dialog-content form {\\n    padding: 1% 2%; }\\n  .example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px; }\\n  .example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n  .mat-form-field {\\n  font-size: 14px;\\n  width: 35%; }\\n  .mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n  .headertext {\\n  font-size: large;\\n  font-style: bold;\\n  color: black;\\n  font-size: 12px; }\\n  .mat-cell {\\n  font-size: 11px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block.component.scss\n// module id = ../../../../../src/app/layout/add-block/add-block.component.scss\n// module chunks = add-block.module","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, VERSION, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ToasterService} from 'angular5-toaster';\n@Component({\n  selector: 'app-add-block',\n  templateUrl: './add-block.component.html',\n  styleUrls: ['./add-block.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class AddBlockComponent implements OnInit {\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n\n  //Dialogbox\n  version = VERSION;\n  response;\n\n\n  displayedColumns = ['select', 'block_name', 'no_of_flats', 'details'];\n  dataSource: MatTableDataSource<Block>;\n  selection = new SelectionModel<Block>(true, []);\n\n  block: Block[];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  private toasterService: ToasterService;\n\n    constructor(\n      private http: HttpClient,\n      public dialog: MatDialog,\n      toasterService: ToasterService,\n      private _formBuilder: FormBuilder\n                 ) {\n                  this.toasterService = toasterService;\n\n          this.getBlockData();\n\n  }\n\n\n  getBlockData(){\n\n    this.http.get<Block[]>('api/blocklistdetails/' + this.societyadmin.id).subscribe(data=> {\n      this.block = data;  \n      console.log(this.block);\n      this.dataSource = new MatTableDataSource(data);\n     this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    });\n  }\n\n  saveBlockId(block_details){\n      console.log(block_details);\n  }\n  openDialog(): void {\n    let dialogRef = this.dialog.open(TestDialogComponent, {\n      width: '250px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result);\n      if(result == null || result == ''){\n\n      }\n\n      else{\n                  //Register Block\n    this.http.post('api/addblock', result).subscribe(data => {\n        this.response= data;\n        if(this.response.success == true){\n          this.toasterService.pop('success', this.response.message);\n          this.getBlockData();  \n\n        }\n        else{\n          this.toasterService.pop('error', this.response.message);  \n\n        }\n    });\n      }\n\n    });\n  }\n\n\n  // openMe() {\n  //   this.fileNameDialogRef = this.dialog.open(TestDialogComponent, {\n  //     height: '30%',\n  //     width: '50%',\n  //     data: {},\n  //   });\n  //   this.fileNameDialogRef.beforeClose\n  // }\n\n  ngOnInit() {\n\n  }\n\n\n  /**\n   * Set the paginator and sort after the view init since this component will\n   * be able to query its view for the initialized paginator and sort.\n   */\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n    /** Whether the number of selected elements matches the total number of rows. */\nisAllSelected() {\n  const numSelected = this.selection.selected.length;\n  const numRows = this.dataSource.data.length;\n  return numSelected === numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmasterToggle() {\n  this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n}\n\n\n}\n\n\n//Dialog Box Component\n\n\n@Component({\n  template: `\n  \n  <div matDialogTitle [@routerTransition] class=\"container-fluid\">Block Registration</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n        <mat-form-field class=\"input-full-width\" fxFlex=\"49\">\n          <input matInput [(ngModel)]=\"block_name\" placeholder=\"Block Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n          <div *ngIf=\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\" class=\"text-danger\">\n          <div *ngIf=\"nameCtrl.errors.required\"><small>Required</small></div>\n          <div *ngIf=\"nameCtrl.errors.minlength\"><small>At least 4 characters long.</small></div>\n          <div *ngIf=\"nameCtrl.errors.maxlength\"><small>Must not exceed 12 characters.</small></div>\n        </div>     \n        </mat-form-field>\n\n        <mat-form-field class=\"input-full-width\" fxFlex=\"49\">\n            <input matInput [(ngModel)]=\"no_of_flats\" (keypress)=\"NumPress($event)\" placeholder=\"Total No Of Flats\"  formControlName=\"flatCtrl\" required>\n            <div *ngIf=\"flatCtrl.invalid && (flatCtrl.dirty || flatCtrl.touched)\" class=\"text-danger\">\n            <div *ngIf=\"flatCtrl.errors.required\"><small>Required</small></div>\n          </div>             \n            </mat-form-field>\n\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions >\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancel</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" (click)=\"onSubmitClick()\" style=\"color:white;\"mat-button  [disabled]=\"!firstFormGroup.valid\" >Submit</button>\n\n  </mat-dialog-actions>`,\n  animations: [routerTransition()]\n\n\n})\nexport class TestDialogComponent implements OnInit {\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n  superadmin = JSON.parse(localStorage['superadmin']);\n\n  charsetOptions: any\n  firstFormGroup: FormGroup;\n  block_name: string;\n  no_of_flats: number;\n\n \n\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddBlockComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n\n\n  ) {\n\n\n    this.firstFormGroup = this._formBuilder.group({\n      nameCtrl: ['', [Validators.required, Validators.minLength(2),Validators.maxLength(12)]],\n      flatCtrl: ['', Validators.required],\n    });\n\n  }\n  get nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\n  get flatCtrl() { return this.firstFormGroup.get('flatCtrl'); }\n\n  ngOnInit() {\n\n  }\n\n  //Only String (Name)\n  StringPress(event: any) {\n    const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n      event.preventDefault();\n    }\n  }\n       //Number Validation\n       NumPress(event: any) {\n        const pattern = /[0-9\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n    \n        }\n      }\n\n      onSubmitClick(): void {\n    const block = {\n          superadmin: this.superadmin.id,\n          society_id: this.societyadmin.id,\n          block_name: this.block_name,\n          no_of_flats: this.no_of_flats,\n        }\n    \n    this.dialogRef.close(block);\n       \n\n  }\n\n}\n\ninterface Block {\n  block_name: string,\n  no_of_flats: number,\n}\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddBlockComponent ,TestDialogComponent } from './add-block.component';\nimport { AddBlockRoutingModule } from './add-block-routing.module';\nimport { PageHeaderModule } from '../../shared';\nimport {  MatInputModule, MatButtonModule, MatSelectModule, MatCardModule, \n  MatPaginatorModule, MatTableModule, MatSortModule, MatDialogModule, MatCheckboxModule, MatTooltipModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule,  } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {ToasterModule } from 'angular5-toaster';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AddBlockRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PageHeaderModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    ToasterModule\n\n  ],\n  entryComponents: [TestDialogComponent],\n  declarations: [AddBlockComponent, TestDialogComponent]\n})\nexport class AddBlockModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-block/add-block.module.ts"],"sourceRoot":"webpack:///"}