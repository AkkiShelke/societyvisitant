{"version":3,"sources":["/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security-routing.module.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security.component.html","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security.component.scss","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security.component.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security.module.ts"],"names":[],"mappings":"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","file":"add-security.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddSecurityComponent } from './add-security.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: AddSecurityComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddSecurityRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security-routing.module.ts","module.exports = \"<div [@routerTransition] class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n\\n            <li class=\\\"breadcrumb-item\\\">\\n              <i class=\\\"fa fa-desktop\\\"></i> <a href=\\\"Javascript:void(0)\\\" [routerLink]=\\\"['/society_details']\\\">Society Details</a>\\n          </li>\\n            <li class=\\\"breadcrumb-item active\\\"><i class=\\\"fa fa-list-ol\\\"></i> Security List</li>\\n        </ol>\\n    </div>\\n</div>\\n\\n<div class=\\\"example-header\\\">\\n  <mat-form-field>\\n    <input  matTooltip=\\\"Search Security Details!\\\" matTooltipPosition=\\\"above\\\" style=\\\"width: 50%;\\\" matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n  </mat-form-field>\\n  <div class=\\\"pull-right\\\">\\n      <button class=\\\" btn btn-danger\\\" matTooltip=\\\"Send Message!\\\" matTooltipPosition=\\\"above\\\"><i class=\\\"fa fa-paper-plane\\\"></i></button>\\n  <button class=\\\" btn btn-success buttoncolor\\\" style=\\\"color:white;\\\" (click)=\\\"openMe()\\\"  matTooltip=\\\"Register Security!\\\" matTooltipPosition=\\\"above\\\" ><i class=\\\"fa fa-plus\\\"></i> Add Security</button>\\n</div>\\n</div>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n\\n  <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Checkbox Column -->\\n    <ng-container matColumnDef=\\\"select\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox matTooltip=\\\"Select All Rows!\\\" matTooltipPosition=\\\"above\\\"  (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n          </mat-checkbox>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox matTooltip=\\\"Select This Row!\\\" matTooltipPosition=\\\"above\\\"  (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\">\\n          </mat-checkbox>\\n        </mat-cell>\\n      </ng-container>\\n\\n    <!-- ID Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Block Column -->\\n    <ng-container matColumnDef=\\\"block\\\">\\n      <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Block </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{row.block}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Email Column -->\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.email\\\"> {{row.email}} </mat-cell>\\n    </ng-container>\\n\\n\\n\\n      <!-- Contact Column -->\\n    <ng-container matColumnDef=\\\"contact\\\">\\n      <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Contact </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.contact\\\"> {{row.contact}} </mat-cell>\\n    </ng-container>\\n\\n      <!-- Details Column -->\\n      <!-- <ng-container matColumnDef=\\\"details\\\">\\n      <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Details </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.details\\\"><button routerLink=\\\"/society_details\\\" class=\\\"btn btn-primary buttoncolor\\\" style=\\\"color:white;\\\"><i  class=\\\"fa fa-eye\\\"></i> View</button>\\n      </mat-cell>\\n      </ng-container> -->\\n\\n    <mat-header-row class=\\\"headertext\\\" *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n    </mat-row>\\n  </mat-table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security.component.html\n// module id = ../../../../../src/app/layout/add-security/add-security.component.html\n// module chunks = add-security.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px; }\\n\\n.example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n\\n.mat-form-field {\\n  font-size: 12px;\\n  width: 50%; }\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n\\n.headertext {\\n  font-size: large;\\n  font-style: bold;\\n  font-size: 12px;\\n  color: black; }\\n\\n.mat-column-select {\\n  overflow: visible; }\\n\\n.mat-cell {\\n  font-size: 11px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security.component.scss\n// module id = ../../../../../src/app/layout/add-security/add-security.component.scss\n// module chunks = add-security.module","import { Component, OnInit, ViewChild, Inject} from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { FormControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, VERSION, MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-add-security',\n  templateUrl: './add-security.component.html',\n  styleUrls: ['./add-security.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class AddSecurityComponent implements OnInit {\n\n  displayedColumns = ['select', 'id', 'block', 'name', 'email', 'contact'];\n  dataSource: MatTableDataSource<UserData>;\n  selection = new SelectionModel<UserData>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private _formBuilder: FormBuilder,  private dialog: MatDialog) {\n\n     // Create 100 users\n const users: UserData[] = [];\n for (let i = 1; i <= 5; i++) { users.push(createNewUser(i)); }\n\n // Assign the data to the data source for the table to render\n this.dataSource = new MatTableDataSource(users);\n\n   }\n   openMe() {\n    this.dialog.open(TestDialogComponent, {\n        height: '40%',\n        width: '45%',\n        data: {},\n    })\n}\n\n  ngOnInit() {\n    \n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\napplyFilter(filterValue: string) {\n  filterValue = filterValue.trim(); // Remove whitespace\n  filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n  this.dataSource.filter = filterValue;\n}\n/** Whether the number of selected elements matches the total number of rows. */\nisAllSelected() {\n  const numSelected = this.selection.selected.length;\n  const numRows = this.dataSource.data.length;\n  return numSelected == numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmasterToggle() {\n  this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n}\n\n//Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n//Only String (Name)\nStringPress(event: any) {\n  const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n  }\n}\n\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name =\n  NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n  NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\nconst block = \nBLOCK[Math.round(Math.random() * (BLOCK.length - 1))];\nconst contact = \nCONTACT[Math.round(Math.random() * (CONTACT.length - 1))];\nconst email = \nEMAIL[Math.round(Math.random() * (EMAIL.length - 1))];\nreturn {\nid: id.toString(),\nblock: block,\nname: name,\nemail: email,\ncontact: contact\n};\n}\n\n/** Constants used to fill up our data base. */\n/** Constants used to fill up our data base. */\nconst EMAIL = ['raj@gmail.com', 'ram@gmail.com', 'rohit@gmail.com'];\nconst NAMES = ['Maia', 'Asher', 'Olivia'];\nconst BLOCK = ['Block A','Block B','Block C','Block D'];\nconst CONTACT = ['9434534344', '983457456', '9049045785'];\n\nexport interface UserData {\n  id: string;\n  block: string;\n  name: string;\n  email: string;\n  contact: any;\n}\n\n\n//Dialog Box Component\n\n\n@Component({\n  template: `\n  <div matDialogTitle>Security Registration</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n        <mat-form-field>\n            <mat-select [(value)]=\"country\" placeholder=\"Select Block\" formControlName=\"blockCtrl\"  required>\n                \n                <mat-option value=\"option1\">Block A</mat-option>\n                <mat-option value=\"option2\">Block B</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput placeholder=\"Security Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n      \n        </mat-form-field>\n        \n        <mat-form-field>\n            <input matInput placeholder=\"Email\"  formControlName=\"emailCtrl\" required>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput placeholder=\"Contact\"  formControlName=\"contactCtrl\" required>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput placeholder=\"Password\"  formControlName=\"passwordCtrl\" required>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput placeholder=\"Confirm Password\"  formControlName=\"confirmpasswordCtrl\" required>\n        </mat-form-field>\n\n    </form>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"pull-right\">\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancle</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" style=\"color:white;\"mat-button [disabled]=\"!firstFormGroup.valid\" matDialogClose>Submit</button>\n\n  </mat-dialog-actions>`,\n\n})\nexport class TestDialogComponent implements OnInit {\n\n  charsetOptions: any\n  firstFormGroup: FormGroup;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n        public dialogRef: MatDialogRef<any>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n\n        \n \n  ) {\n    this.firstFormGroup = this._formBuilder.group({\n      blockCtrl: ['', Validators.required],\n      nameCtrl: ['', Validators.required],\n      emailCtrl: ['', [Validators.required, Validators.email]],\n      contactCtrl:  ['', Validators.required],\n      passwordCtrl: ['', Validators.required],\n      confirmpasswordCtrl: ['', Validators.required]\n    });\n\n  }\n  ngOnInit() {\n\n  }\n       //Only String (Name)\n       StringPress(event: any) {\n        const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n        }\n      }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddSecurityComponent, TestDialogComponent } from './add-security.component';\nimport { AddSecurityRoutingModule } from './add-security-routing.module';\nimport { PageHeaderModule } from '../../shared';\nimport { MatInputModule, MatButtonModule, MatSelectModule, MatCardModule, MatPaginatorModule, MatTableModule, MatSortModule, MatDialogModule, MatCheckboxModule, MatTooltipModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule,  } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material';\nimport { MatStepperModule } from '@angular/material/stepper';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AddSecurityRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PageHeaderModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatTooltipModule\n\n\n  ],\n  entryComponents: [TestDialogComponent],\n  declarations: [AddSecurityComponent, TestDialogComponent]\n})\nexport class AddSecurityModule { }\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-security/add-security.module.ts"],"sourceRoot":"webpack:///"}