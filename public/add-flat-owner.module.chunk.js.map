{"version":3,"sources":["/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner-routing.module.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner.component.html","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner.component.scss","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner.component.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner.module.ts"],"names":[],"mappings":"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","file":"add-flat-owner.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddFlatOwnerComponent } from './add-flat-owner.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: AddFlatOwnerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddFlatOwnerRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner-routing.module.ts","module.exports = \"<toaster-container></toaster-container>\\n<div [@routerTransition] class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-12\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                    <i class=\\\"fa fa-dashboard\\\"></i> <a href=\\\"Javascript:void(0)\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n                </li>\\n\\n                <li class=\\\"breadcrumb-item active\\\"><i class=\\\"fa fa-plus\\\"></i> Add Flat Details</li>\\n            </ol>\\n        </div>\\n    </div><div class=\\\"row\\\">\\n    <div class=\\\"col-md-1\\\">\\n\\n    </div>\\n    <div class=\\\"col-md-10\\\">\\n            <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n                    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n                        <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    \\n\\n\\n                                    <form [formGroup]=\\\"firstFormGroup\\\">\\n                                            <ng-template matStepLabel>Flat Owner's Details</ng-template>\\n                                            <mat-form-field>\\n                                                    <mat-select [(value)]=\\\"block_id\\\" placeholder=\\\"Select Block\\\" formControlName=\\\"blockCtrl\\\" required>\\n                                                    <mat-option *ngFor=\\\"let list of block\\\" (click)=\\\"getManager(list._id)\\\" [value]=\\\"list._id\\\">{{list.block_name}}</mat-option>\\n                                                </mat-select>\\n                                                <div *ngIf=\\\"blockCtrl.invalid && (blockCtrl.dirty || blockCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                        <div *ngIf=\\\"blockCtrl.errors.required\\\"><small>Required</small></div>\\n                                                        </div>\\n                                                </mat-form-field>\\n                                                <mat-form-field>\\n                                                        <mat-select [(value)]=\\\"manager_id\\\" placeholder=\\\"Select Manager\\\" formControlName=\\\"managerCtrl\\\" required>\\n                                                        <mat-option *ngFor=\\\"let list of manager\\\" (click)=\\\"getChairman(list._id)\\\" [value]=\\\"list._id\\\">{{list.manager_name}}</mat-option>\\n                                                    </mat-select>\\n                                                    <div *ngIf=\\\"managerCtrl.invalid && (managerCtrl.dirty || managerCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                            <div *ngIf=\\\"managerCtrl.errors.required\\\"><small>Required</small></div>\\n                                                            </div>\\n                                                    </mat-form-field>\\n                                                <mat-form-field>\\n                                                        <mat-select [(value)]=\\\"chairman_id\\\" placeholder=\\\"Select Chairman\\\" formControlName=\\\"chairmanCtrl\\\" required>\\n                                                        <mat-option *ngFor=\\\"let list of chairman\\\" [value]=\\\"list._id\\\">{{list.chairman_name}}</mat-option>\\n                                                    </mat-select>\\n                                                    <div *ngIf=\\\"chairmanCtrl.invalid && (chairmanCtrl.dirty || chairmanCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                            <div *ngIf=\\\"chairmanCtrl.errors.required\\\"><small>Required</small></div>\\n                                                            </div>\\n                                                    </mat-form-field>\\n                                          <br>\\n                                            <mat-form-field>\\n                                              <input matInput [(ngModel)]=\\\"flatowner_name\\\" placeholder=\\\"Flat Owner Name\\\" (keypress)=\\\"StringPress($event)\\\"  formControlName=\\\"nameCtrl\\\" required>\\n                                              <div *ngIf=\\\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                    <div *ngIf=\\\"nameCtrl.errors.required\\\"><small>Required</small></div>\\n                                                    </div>\\n                                            </mat-form-field>\\n                                            \\n                                            <mat-form-field>\\n                                                    <input  matInput [(ngModel)]=\\\"flatno\\\" placeholder=\\\"Flat Number\\\" formControlName=\\\"flatnoCtrl\\\"  required>\\n                                                    <div *ngIf=\\\"flatnoCtrl.invalid && (flatnoCtrl.dirty || flatnoCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                            <div *ngIf=\\\"flatnoCtrl.errors.required\\\"><small>Required</small></div>\\n                                                            </div>\\n                                                </mat-form-field>\\n\\n                                            <mat-form-field>\\n                                                    <input  matInput [(ngModel)]=\\\"floorno\\\" placeholder=\\\"Floor Number\\\" formControlName=\\\"floornoCtrl\\\"  required>\\n                                                    <div *ngIf=\\\"floornoCtrl.invalid && (floornoCtrl.dirty || floornoCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                            <div *ngIf=\\\"floornoCtrl.errors.required\\\"><small>Required</small></div>\\n                                                            </div>\\n                                            </mat-form-field>\\n                                            \\n                                            <mat-form-field>\\n                                                <input  name=\\\"email\\\" [(ngModel)]=\\\"flatowner_email\\\" matInput placeholder=\\\"Owner Email\\\" formControlName=\\\"emailCtrl\\\"  required>\\n                                                 <mat-hint align=\\\"end\\\">abc@gmail.com</mat-hint> \\n                                                 <div *ngIf=\\\"emailCtrl.invalid && (emailCtrl.dirty || emailCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                        <div *ngIf=\\\"emailCtrl.errors.required\\\"><small>Required</small></div>\\n                                                        <div *ngIf=\\\"emailCtrl.dirty\\\" class=\\\"text-danger\\\">        \\n                                                        <div *ngIf=\\\"emailCtrl.errors.email\\\"><small>Invalid</small></div>\\n                                                        </div>\\n                                                </div>\\n\\n                                            </mat-form-field>\\n                                            \\n                                            <mat-form-field>\\n                                                <input matInput #input [(ngModel)]=\\\"flatowner_contact\\\" placeholder=\\\"Owner Contact\\\" (keypress)=\\\"NumPress($event)\\\" formControlName=\\\"contactCtrl\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" required>\\n                                                <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/10</mat-hint>\\n                                                <div *ngIf=\\\"contactCtrl.invalid && (contactCtrl.dirty || contactCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                        <div *ngIf=\\\"contactCtrl.errors.required\\\"><small>Required</small></div>    \\n                                                        <div *ngIf=\\\"contactCtrl.errors.minlength\\\"><small>Should be 10 Digit</small></div>\\n                                                        <div *ngIf=\\\"contactCtrl.errors.maxlength\\\"><small>Should be 10 Digit</small></div>\\n                                                        </div>\\n                                            </mat-form-field>\\n                                            <br>\\n                                            <mat-form-field>\\n                                                    <input matInput type=\\\"password\\\" [(ngModel)]=\\\"flatowner_password\\\"  #passwordinput placeholder=\\\"Password\\\" formControlName=\\\"passwordCtrl\\\"  required>\\n                                                    <mat-hint align=\\\"end\\\">{{passwordinput.value?.length || 0}}/[Min 6 -Max 12]</mat-hint>\\n                                                    <div *ngIf=\\\"passwordCtrl.invalid && (passwordCtrl.dirty || passwordCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                            <div *ngIf=\\\"passwordCtrl.errors.required\\\"><small>Password is required</small></div>\\n                                                            <div *ngIf=\\\"passwordCtrl.errors.minlength\\\"><small>At least 6 characters long</small></div>\\n                                                            <div *ngIf=\\\"passwordCtrl.errors.maxlength\\\"><small>Must ot exceed 12 characters</small></div>\\n                                                            </div>     \\n                                                </mat-form-field>\\n                                                  \\n                                                  <mat-form-field>\\n                                                    <input matInput type=\\\"password\\\" name=\\\"confirm_password\\\" [(ngModel)]=\\\"flatowner_confirm_password\\\" pattern={{this.flatowner_password}} #confirmpasswrdinput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmpasswordCtrl\\\" minlength=\\\"6\\\" maxlength=\\\"12\\\" required>\\n                                                    <mat-hint align=\\\"end\\\">{{confirmpasswrdinput.value?.length || 0}}</mat-hint>\\n                                                    <div *ngIf=\\\"confirmpasswordCtrl.invalid && (confirmpasswordCtrl.dirty || confirmpasswordCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                            <div *ngIf=\\\"confirmpasswordCtrl.errors.required\\\"><small>Re-Enter the Password</small></div>\\n                                                            <div *ngIf=\\\"confirmpasswordCtrl.errors.pattern\\\"><small>Password is not match</small></div>\\n                                                            </div>  \\n                                                  </mat-form-field>\\n                                        <br>\\n                                                     <section class=\\\"example-section\\\">\\n                                                      <label class=\\\"example-margin\\\">Flat status:</label>\\n                                                 \\n                                                            <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"flat_status\\\" formControlName=\\\"statusCtrl\\\">\\n                                                                    <mat-radio-button color=\\\"primary\\\" class=\\\"example-radio-button\\\" checked [value]=true> Active</mat-radio-button>\\n                                                                    <mat-radio-button color=\\\"primary\\\" class=\\\"example-radio-button\\\" [value]=false> Inactive</mat-radio-button>\\n                                                    \\n                                                                </mat-radio-group>                                                            \\n                                                    </section>\\n        \\n                                            \\n                                            <br>\\n                                              <div>\\n                                              <button class=\\\"buttoncolor\\\" style=\\\"color:white;\\\" (click)=\\\"checkFlatAndFlatownerAvailable()\\\" mat-button >Next</button>\\n                                            </div>\\n                                          </form>\\n                            </div>\\n                        </div>\\n                 \\n                    </mat-step>\\n\\n                    \\n                    <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n                        <mat-card>\\n                            <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 \\\">\\n                                        <form [formGroup]=\\\"secondFormGroup\\\">\\n                                                <ng-template matStepLabel>Tenant Details(optional)</ng-template>\\n                                                \\n        \\n                                                <p>      <mat-slide-toggle [(ngModel)]=\\\"tenant_status\\\"  color=\\\"primary\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  #rented> Flat On Rent!</mat-slide-toggle>\\n                                                </p>\\n                                    \\n                                               <div *ngIf=\\\"rented.checked\\\">\\n                                                    <mat-form-field>\\n                                                            <input  [(ngModel)]=\\\"tenant_name\\\" matInput placeholder=\\\"Tenant Name\\\" formControlName=\\\"tenantnameCtrl\\\"   >\\n                                                            <div *ngIf=\\\"tenantnameCtrl.invalid && (tenantnameCtrl.dirty || tenantnameCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                                    <div *ngIf=\\\"tenantnameCtrl.errors.required\\\"><small>Required</small></div>\\n                                                                    </div>\\n                                                        </mat-form-field>\\n                                                    <mat-form-field>\\n                                                            <input  [(ngModel)]=\\\"tenant_email\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"tenantemailCtrl\\\"  >\\n                                                            <div *ngIf=\\\"tenantemailCtrl.invalid && (tenantemailCtrl.dirty || tenantemailCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                                <div *ngIf=\\\"tenantemailCtrl.errors.required\\\"><small>Required</small></div>\\n                                                                <div *ngIf=\\\"tenantemailCtrl.dirty\\\" class=\\\"text-danger\\\">        \\n                                                                <div *ngIf=\\\"tenantemailCtrl.errors.email\\\"><small>Invalid</small></div>\\n                                                                </div>\\n                                                                </div>\\n                                                    </mat-form-field>\\n                                                    <mat-form-field>\\n                                                            <input [(ngModel)]=\\\"tenant_contact\\\"  matInput placeholder=\\\"Contact\\\" formControlName=\\\"tenantcontactCtrl\\\" (keypress)=\\\"NumPress($event)\\\"   >\\n                                                            <div *ngIf=\\\"tenantcontactCtrl.invalid && (tenantcontactCtrl.dirty || tenantcontactCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                                    <div *ngIf=\\\"tenantcontactCtrl.errors.required\\\"><small>Required</small></div>    \\n                                                                    <div *ngIf=\\\"tenantcontactCtrl.errors.minlength\\\"><small>Should be 10 Digit</small></div>\\n                                                                    <div *ngIf=\\\"tenantcontactCtrl.errors.maxlength\\\"><small>Should be 10 Digit</small></div>\\n                                                                    </div>\\n                                                        </mat-form-field>\\n                                                    <mat-form-field>\\n                                                            <input matInput type=\\\"password\\\" [(ngModel)]=\\\"tenant_password\\\"  #passwordinput placeholder=\\\"Password\\\" formControlName=\\\"tenantpasswordCtrl\\\"  required>\\n                                                            <mat-hint align=\\\"end\\\">{{passwordinput.value?.length || 0}}/[Min 6 -Max 12]</mat-hint>\\n                                                            <div *ngIf=\\\"tenantpasswordCtrl.invalid && (tenantpasswordCtrl.dirty || tenantpasswordCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                                    <div *ngIf=\\\"tenantpasswordCtrl.errors.required\\\"><small>Required</small></div>\\n                                                                    <div *ngIf=\\\"tenantpasswordCtrl.errors.minlength\\\"><small>At least 6 characters long</small></div>\\n                                                                    <div *ngIf=\\\"tenantpasswordCtrl.errors.maxlength\\\"><small>Must not exceed 12 characters</small></div>\\n                                                                    </div>     \\n                                                          </mat-form-field>\\n                                                          \\n                                                          <mat-form-field>\\n                                                            <input matInput type=\\\"password\\\" name=\\\"confirm_password\\\" [(ngModel)]=\\\"tenant_confirm_password\\\" pattern={{this.tenant_password}} #confirmpasswrdinput placeholder=\\\"Confirm Password\\\" formControlName=\\\"tenantconfirmpasswordCtrl\\\" minlength=\\\"6\\\" maxlength=\\\"12\\\" required>\\n                                                            <mat-hint align=\\\"end\\\">{{confirmpasswrdinput.value?.length || 0}}</mat-hint>\\n                                                            <div *ngIf=\\\"tenantconfirmpasswordCtrl.invalid && (tenantconfirmpasswordCtrl.dirty || tenantconfirmpasswordCtrl.touched)\\\" class=\\\"text-danger\\\">\\n                                                                    <div *ngIf=\\\"tenantconfirmpasswordCtrl.errors.required\\\"><small>Re-Enter the Password</small></div>\\n                                                                    <div *ngIf=\\\"tenantconfirmpasswordCtrl.errors.pattern\\\"><small>Password is not match</small></div>\\n                                                                    </div>  \\n                                                          </mat-form-field>\\n                                               </div>\\n                                               <br>\\n                                               <br>\\n\\n                                               <button class=\\\"buttoncolor\\\" style=\\\"color:white;\\\" mat-button matStepperPrevious>Back</button>\\n\\n                                            <button class=\\\"buttoncolor\\\" style=\\\"color:white;\\\" (click)=\\\"checktenant()\\\"  mat-button >Next</button>\\n                                            </form>\\n                                          </div>\\n                                                  \\n                                </div>\\n                        </mat-card>\\n                  \\n                    </mat-step>\\n                    <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\n                        <mat-card>\\n                \\n                            <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12 \\\">\\n\\n                                        <form >\\n                                                <ng-template matStepLabel>Flat Member Details</ng-template>\\n                                                \\n\\n                                                        <label>Flat Member Details:</label>\\n                                                        <br>\\n                                                        \\n                                                        <div *ngFor=\\\"let item of row; let i=index\\\">\\n                                                        <mat-form-field>\\n                                                          <input type=\\\"text\\\" matInput name=\\\"name{{i}}\\\"  [(ngModel)]=\\\"item.name\\\" placeholder=\\\"Name\\\" required/> \\n                                                          \\n                                                        </mat-form-field>\\n                                                        <mat-form-field>\\n                                                          <input type=\\\"text\\\" matInput name=\\\"email{{i}}\\\"  [(ngModel)]=\\\"item.email\\\"  placeholder=\\\"Email\\\" required/>\\n                                                        </mat-form-field>\\n                                                        <mat-form-field>\\n                                                          <input type=\\\"text\\\" matInput name=\\\"cotact{{i}}\\\"  [(ngModel)]=\\\"item.contact\\\"  placeholder=\\\"Contact\\\" (keypress)=\\\"NumPress($event)\\\"  minlength=\\\"10\\\" maxlength=\\\"10\\\" required/> \\n                                                        </mat-form-field>\\n                                                          <button class=\\\"btn btn-danger buttoncolor\\\"  style=\\\"color:white;\\\" (click)=\\\"deleteRow(i)\\\">X</button>\\n                                                        </div>\\n                                                        <button class=\\\"btn btn-success buttoncolor pull-right\\\" style=\\\"color:white;\\\" (click)=\\\"addRow()\\\">Add Member</button>\\n\\n                                                          <br>\\n                                                 <button class=\\\"buttoncolor\\\" style=\\\"color:white;\\\" mat-button matStepperPrevious>Back</button>\\n                                            <button class=\\\"buttoncolor\\\" style=\\\"color:white;\\\" mat-button (click)=\\\"registerflatowner()\\\">Submit</button>\\n                                            </form>\\n                                          </div>\\n                                                  \\n                                </div>\\n                        </mat-card>\\n                  \\n                    </mat-step>\\n            \\n                  </mat-horizontal-stepper>\\n    </div>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner.component.html\n// module id = ../../../../../src/app/layout/add-flat-owner/add-flat-owner.component.html\n// module chunks = add-flat-owner.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-radio-button ~ .mat-radio-button {\\n  padding-right: 16px; }\\n\\n.example-h2 {\\n  margin: 10px; }\\n\\n.example-section {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-line-pack: center;\\n      align-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  height: 60px; }\\n\\n.example-margin {\\n  margin: 0 10px; }\\n\\n.mat-form-field {\\n  width: 30%; }\\n\\n.section {\\n  font-size: 11px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner.component.scss\n// module id = ../../../../../src/app/layout/add-flat-owner/add-flat-owner.component.scss\n// module chunks = add-flat-owner.module","import { Component, \n  OnInit, Inject,\n  ViewChild, \n  ComponentFactoryResolver,\n  ViewContainerRef } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { FormControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { FormGroupDirective, NgForm} from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ToasterService} from 'angular5-toaster';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-add-flat-owner',\n  templateUrl: './add-flat-owner.component.html',\n  styleUrls: ['./add-flat-owner.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class AddFlatOwnerComponent implements OnInit {\n  @ViewChild('stepper') stepper;\n\n // Initializtion\n public row: any = [{}];\n\n\n\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  thirdFormGroup: FormGroup;\n\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n\n  align = 'start';\n  _ref:any;\n\n\n  flatowner_name: string;\n  flatno: string;\n  floorno: string;\n  flatowner_email: string;\n  flatowner_contact: number;\n  flatowner_password: string;\n  flatowner_confirm_password: string;\n  flat_status: boolean = true;\n\n  tenant_name: string;\n  tenant_email: string;\n  tenant_contact: number;\n  tenant_password: string;\n  tenant_confirm_password: string;\n  tenant_status: boolean = false;\n\n\n  flatresponse;\n  flatownerresponse;\n  tenantresponse;\n  memberresponse;\n  @ViewChild('parent', { read: ViewContainerRef }) container: ViewContainerRef;\n\nblock: Block[];\nchairman: Chairman[];\nchairman_id: any;\nmanager: Manager[];\nprivate toasterService: ToasterService;\ntenant: boolean = false;\nconstructor(private http: HttpClient,\n  toasterService: ToasterService,\n  private _formBuilder: FormBuilder,\n  private _cfr: ComponentFactoryResolver ) { \n    this.toasterService = toasterService;\n\n  }\n\n  ngOnInit() {\n    this.http.get<Block[]>('api/blocklistdetails/' + this.societyadmin.id).subscribe(data => {\n    this.block =  data;\n    console.log(this.block);\n  });\n\n  \n\n  this.firstFormGroup = this._formBuilder.group({\n    blockCtrl: ['', Validators.required],\n    managerCtrl: ['', Validators.required],\n    chairmanCtrl: ['', Validators.required],\n    nameCtrl: ['', Validators.required],\n    flatnoCtrl: ['', Validators.required],\n    floornoCtrl: ['', Validators.required],\n    emailCtrl: ['', [Validators.required, Validators.email]],\n    contactCtrl: ['', Validators.required],\n    passwordCtrl: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]],\n    confirmpasswordCtrl: ['', [Validators.required, Validators.pattern]],\n    statusCtrl: ['', Validators.required]\n  });\n\n        this.secondFormGroup = this._formBuilder.group({\n        tenantnameCtrl: ['', Validators.required],\n        tenantemailCtrl: ['', [Validators.required, Validators.email]],\n        tenantcontactCtrl: ['', Validators.required],\n        tenantpasswordCtrl: ['', Validators.required],\n        tenantconfirmpasswordCtrl: ['', [Validators.required, Validators.pattern]],\n      \n    });\n  \n  this.thirdFormGroup = this._formBuilder.group({\n      flatmembernameCtrl: [ Validators.required],\n      flatmemberemailCtrl: [[Validators.required, Validators.email]],\n      flatmembercontactCtrl: [Validators.required],\n     \n\n  });\n\n  \n}\nget blockCtrl() { return this.firstFormGroup.get('blockCtrl'); }\nget managerCtrl() { return this.firstFormGroup.get('managerCtrl'); }\nget chairmanCtrl() { return this.firstFormGroup.get('chairmanCtrl'); }\nget nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\nget flatnoCtrl() { return this.firstFormGroup.get('flatnoCtrl'); }\nget floornoCtrl() { return this.firstFormGroup.get('floornoCtrl'); }\nget emailCtrl() { return this.firstFormGroup.get('emailCtrl'); }\nget contactCtrl() { return this.firstFormGroup.get('contactCtrl'); }\nget passwordCtrl() { return this.firstFormGroup.get('passwordCtrl'); }\nget confirmpasswordCtrl() { return this.firstFormGroup.get('confirmpasswordCtrl'); }\nget statusCtrl() { return this.firstFormGroup.get('statusCtrl'); }\n\nget tenantnameCtrl() { return this.secondFormGroup.get('tenantnameCtrl'); }\nget tenantemailCtrl() { return this.secondFormGroup.get('tenantemailCtrl'); }\nget tenantcontactCtrl() { return this.secondFormGroup.get('tenantcontactCtrl'); }\nget tenantpasswordCtrl() { return this.secondFormGroup.get('tenantpasswordCtrl'); }\nget tenantconfirmpasswordCtrl() { return this.secondFormGroup.get('tenantconfirmpasswordCtrl'); }\n\nget flatmembernameCtrl() { return this.thirdFormGroup.get('flatmembernameCtrl'); }\nget flatmemberemailCtrl() { return this.thirdFormGroup.get('flatmemberemailCtrl'); }\nget flatmembercontactCtrl() { return this.thirdFormGroup.get('flatmembercontactCtrl'); }\n\nchangeStep(index: number) {\n  this.stepper.selectedIndex = index;\n}\ngetManager(block_id){\n\n  this.http.get<Manager[]>('api/managerlistbyblock/' + block_id).subscribe(data => {\n    this.manager =  data;\n    console.log(this.manager);\n});\n}\ngetChairman(manager_id){\n\n  this.http.get<Chairman[]>('api/chairmanlistbymanager/' + manager_id).subscribe(data => {\n    this.chairman =  data;\n    console.log(this.chairman);\n});\n}\n\n\n\n // Add New Row\n addRow() {\n  this.row.push({});\n}\n\n// Delete Rows\ndeleteRow(index: number) {\n  this.row.splice(index, 1);\n}\n\n\ncheckFlatAndFlatownerAvailable(){\n  const flat_details = {\n    chairman_id: this.chairman_id,\n    flat_no: this.flatno,\n  };\n\n \n  console.log(flat_details);\n\n  this.http.post('api/checkflat', flat_details).subscribe(data => {\n    this.flatresponse= data;\n    console.log(this.flatresponse)\n    if(this.flatresponse.success == true){\n      this.stepper.next();\n\n    }\n    else{\n      this.toasterService.pop('error', this.flatresponse.message);  \n    }\n});\n\n}\n\nchecktenant(){\n\n  if(this.tenant_status == true){\n    if (this.secondFormGroup.dirty && this.secondFormGroup.valid) {\n      this.stepper.next();\n  \n    }\n\n  }else{\n    console.log(this.tenant_status);\nthis.secondFormGroup.disable();\n    this.stepper.next();\n    console.log(this.tenant_status);\n\n  }\n\n\n}\n\nregisterflatowner(){\n  const flat_details = {\n\n    society_id: this.societyadmin.id,\n    chairman_id: this.chairman_id,\n    flat_no: this.flatno,\n    floor_no: this.floorno,\n    flat_status: this.flat_status\n  };\n\n \n  console.log(flat_details);\n\n  this.http.post('api/addflat', flat_details).subscribe(data => {\n    this.flatresponse= data;\n    console.log(this.flatresponse)\n    if(this.flatresponse.success == true){\n      this.toasterService.pop('success', this.flatresponse.message);  \n\n      const flatowner_details ={\n\n        society_id: this.societyadmin.id,\n        flat_id: this.flatresponse.result._id,\n        flatowner_name: this.flatowner_name,\n        flatowner_email: this.flatowner_email,\n        flatowner_contact: this.flatowner_contact,\n        flatowner_password: this.flatowner_confirm_password\n      };\n      console.log(flatowner_details);\n      this.http.post('api/addflatowner', flatowner_details).subscribe(data => {\n        this.flatownerresponse= data;\n        console.log(this.flatownerresponse);\n        if(this.flatownerresponse.success == true){\n          this.toasterService.pop('success', this.flatownerresponse.message); \n          console.log(this.tenant_status); \n          console.log(this.tenant_status);\n          if(this.tenant_status = true){\n            const tenant_details ={\n\n              society_id: this.societyadmin.id,\n              flat_id: this.flatresponse.result._id,\n              flatowner_id: this.flatownerresponse.result._id,\n              tenant_name: this.tenant_name,\n              tenant_email: this.tenant_email,\n              tenant_contact: this.tenant_contact,\n              tenant_password: this.tenant_confirm_password\n            };\n            console.log(tenant_details);\n            this.http.post('api/addtenant', tenant_details).subscribe(data => {\n              this.tenantresponse= data;\n              console.log(this.tenantresponse);\n  \n              if(this.tenantresponse.success == true){\n                this.toasterService.pop('success', this.tenantresponse.message);  \n                \n                for(var i=0; this.row.length> i; i++ ){\n  \n  \n                  console.log(this.row[i]);\n              \n                const member_details ={\n                  society_id: this.societyadmin.id,\n                  flatowner_id: this.flatownerresponse.result._id,\n                  tenant_id: this.tenantresponse.result._id,\n                  flatmember_name: this.row[i].name,\n                  flatmember_email: this.row[i].email,\n                  flatmember_contact: this.row[i].contact\n                };\n                console.log(member_details);\n                this.http.post('api/addflatmember', member_details).subscribe(data => {\n                  this.memberresponse= data;\n                  if(this.memberresponse.success == true){\n                    this.toasterService.pop('success', \"Flat Details enter Successfully\");  \n                  }     \n                  else{\n                    this.toasterService.pop('error', this.memberresponse.message);  \n                  }\n                });\n              }\n              }\n              else{\n                this.toasterService.pop('error', this.tenantresponse.message);  \n                this.stepper.selectedIndex = 1;\n  \n              }\n            });\n          }\n          else{\n            for(var i=0; this.row.length> i; i++ ){\n  \n  \n              console.log(this.row[i]);\n          \n            const member_details ={\n\n              society_id: this.societyadmin.id,\n              flatowner_id: this.flatownerresponse.result._id,\n              flatmember_name: this.row[i].name,\n              flatmember_email: this.row[i].email,\n              flatmember_contact: this.row[i].contact\n            };\n            console.log(member_details);\n            this.http.post('api/addflatmember', member_details).subscribe(data => {\n              this.memberresponse= data;\n              if(this.memberresponse.success == true){\n                this.toasterService.pop('success', \"Flat Details enter Successfully\");  \n              }     \n              else{\n                this.toasterService.pop('error', this.memberresponse.message);  \n              }\n            });\n          }\n          }\n          }\n         \n        else{\n          this.toasterService.pop('error', this.flatownerresponse.message);\n            this.stepper.selectedIndex = 0;\n        }\n      });\n    }\n    else{\n      this.toasterService.pop('error', this.flatresponse.message);  \n      this.stepper.selectedIndex = 0;\n\n    }\n  });\n}\n\n        //Contact Validation\n        NumPress(event: any) {\n          const pattern = /[0-9\\+\\-\\ ]/;\n      \n          let inputChar = String.fromCharCode(event.charCode);\n          if (event.keyCode != 8 && !pattern.test(inputChar)) {\n            event.preventDefault();\n      \n          }\n        }\n        //Only String (Name)\n        StringPress(event: any) {\n          const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n      \n          let inputChar = String.fromCharCode(event.charCode);\n          if (event.keyCode != 8 && !pattern.test(inputChar)) {\n            event.preventDefault();\n          }\n        }\n\n      }\n\n      interface Block {\n        id: any;\n        block_name: string,\n        no_of_flats: number,\n      }\n    \n      interface Manager{\n        manager_name : string;\n        email : string;\n        contact: number;\n      }\n\n      interface Chairman{\n        _id: any;\n        chairman_name : string;\n        email : string;\n        contact: number;\n      }\n\n      interface Member{\n        member_name: string;\n        member_email: string;\n        member_contact: number;\n      }\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddFlatOwnerComponent } from './add-flat-owner.component';\nimport { AddFlatOwnerRoutingModule } from './add-flat-owner-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PageHeaderModule } from '../../shared/index';\nimport { MatCheckboxModule, MatRadioModule ,MatStepperModule, MatFormFieldModule, MatCardModule, MatInputModule, MatSelectModule, MatButtonModule, MatTooltipModule, MatSlideToggleModule, MatTableModule } from '@angular/material';\nimport {ToasterModule } from 'angular5-toaster';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AddFlatOwnerRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n     PageHeaderModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    ToasterModule\n\n\n\n    ],\n  declarations: [AddFlatOwnerComponent]\n})\nexport class AddFlatOwnerModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-flat-owner/add-flat-owner.module.ts"],"sourceRoot":"webpack:///"}