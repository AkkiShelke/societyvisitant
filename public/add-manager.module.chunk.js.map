{"version":3,"sources":["/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager-routing.module.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager.component.html","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager.component.scss","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager.component.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager.module.ts"],"names":[],"mappings":"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","file":"add-manager.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddManagerComponent } from './add-manager.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: AddManagerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddManagerRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager-routing.module.ts","module.exports = \"<toaster-container></toaster-container>\\n<div [@routerTransition] class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n            <li class=\\\"breadcrumb-item\\\">\\n                <i class=\\\"fa fa-dashboard\\\"></i> <a href=\\\"Javascript:void(0)\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n            </li>\\n            <li class=\\\"breadcrumb-item\\\">\\n              <i class=\\\"fa fa-desktop\\\"></i> <a href=\\\"Javascript:void(0)\\\" [routerLink]=\\\"['/society_details']\\\">Society Details</a>\\n          </li>\\n            <li class=\\\"breadcrumb-item active\\\"><i class=\\\"fa fa-list-ol\\\"></i> Manager List</li>\\n        </ol>\\n    </div>\\n</div>\\n\\n\\n  <div class=\\\"example-header\\\">\\n    <mat-form-field>\\n      <input  matTooltip=\\\"Search Manager Details!\\\" matTooltipPosition=\\\"above\\\" style=\\\"width: 50%;\\\" matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n    </mat-form-field>\\n    <div class=\\\"pull-right\\\">\\n        <button class=\\\" btn btn-danger\\\" matTooltip=\\\"Send Message!\\\" matTooltipPosition=\\\"above\\\"><i class=\\\"fa fa-paper-plane\\\"></i></button>\\n    <button class=\\\" btn btn-success buttoncolor\\\" style=\\\"color:white;\\\" (click)=\\\"openDialog()\\\"  matTooltip=\\\"Register Manager!\\\" matTooltipPosition=\\\"above\\\" ><i class=\\\"fa fa-plus\\\"></i> Add Manager</button>\\n      </div>\\n  </div>\\n  \\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n  \\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n            <!-- Checkbox Column -->\\n    <ng-container matColumnDef=\\\"select\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox matTooltip=\\\"Select All Rows!\\\" matTooltipPosition=\\\"above\\\"  (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n          </mat-checkbox>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox matTooltip=\\\"Select This Row!\\\" matTooltipPosition=\\\"above\\\"  (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\">\\n          </mat-checkbox>\\n        </mat-cell>\\n      </ng-container>\\n  \\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n      </ng-container>\\n  \\n      <!-- Block Column -->\\n      <ng-container matColumnDef=\\\"block\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Block </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.Block_id.block_name}} </mat-cell>\\n      </ng-container>\\n  \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.manager_name}} </mat-cell>\\n      </ng-container>\\n  \\n        <!-- Email Column -->\\n        <ng-container matColumnDef=\\\"email\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Email </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.email\\\"> {{row.email}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Contact Column -->\\n      <ng-container matColumnDef=\\\"contact\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Contact </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.contact\\\"> {{row.contact}} </mat-cell>\\n      </ng-container>\\n\\n        <!-- Details Column -->\\n        <!-- <ng-container matColumnDef=\\\"details\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Details </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.details\\\"><button routerLink=\\\"/society_details\\\" class=\\\"btn btn-primary buttoncolor\\\" style=\\\"color:white;\\\"><i  class=\\\"fa fa-eye\\\"></i> View</button>\\n        </mat-cell>\\n        </ng-container> -->\\n  \\n      <mat-header-row class=\\\"headertext\\\" *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </mat-row>\\n    </mat-table>\\n  \\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n  </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager.component.html\n// module id = ../../../../../src/app/layout/add-manager/add-manager.component.html\n// module chunks = add-manager.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px; }\\n\\n.example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n\\n.mat-form-field {\\n  font-size: 12px;\\n  width: 50%; }\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n\\n.headertext {\\n  font-size: large;\\n  font-size: 12px;\\n  font-style: bold;\\n  color: black; }\\n\\n.mat-column-select {\\n  overflow: visible; }\\n\\n.mat-cell {\\n  font-size: 11px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager.component.scss\n// module id = ../../../../../src/app/layout/add-manager/add-manager.component.scss\n// module chunks = add-manager.module","import { Component, OnInit, ViewChild, Inject} from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { FormControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog,MatDialogRef, MAT_DIALOG_DATA, VERSION, MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ToasterService} from 'angular5-toaster';\n\n@Component({\n  selector: 'app-add-manager',\n  templateUrl: './add-manager.component.html',\n  styleUrls: ['./add-manager.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class AddManagerComponent implements OnInit {\n \n  societyadmin = JSON.parse(localStorage['societyadmin']);\n\n  response;\n\n  displayedColumns = ['select', 'block' , 'name', 'email', 'contact'];\n  dataSource: MatTableDataSource<Manager>;\n  selection = new SelectionModel<Manager>(true, []);\n\n  manager: Manager[];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  private toasterService: ToasterService;\n\n  constructor(private http: HttpClient,\n    public dialog: MatDialog,\n    toasterService: ToasterService,\n    private _formBuilder: FormBuilder) {\n\n      this.toasterService = toasterService;\n\n\n    \n      this.getManagerData();\n\n   }\n\n\n   getManagerData(){\n    this.http.get<Manager[]>('https://visitant.herokuapp.com/api/managerlistdetails/' + this.societyadmin.id).subscribe(data=> {\n      this.manager = data;  \n      console.log(this.manager);\n      this.dataSource = new MatTableDataSource(data);\n     this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    });\n  \n  }\n  openDialog(): void {\n    let dialogRef = this.dialog.open(TestDialogComponent, {\n      height: '350px',\n      width: '620px',\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log(result);\n      if(result == null || result == ''){\n\n      }\n\n      else{\n                  //Register Block\n    this.http.post('https://visitant.herokuapp.com/api/addmanager', result).subscribe(data => {\n        this.response= data;\n        if(this.response.success == true){\n          this.toasterService.pop('success', this.response.message);\n          this.getManagerData();  \n\n        }\n        else{\n          this.toasterService.pop('error', this.response.message);  \n\n        }\n    });\n      }\n\n    });\n  }\n\n\n  ngOnInit() {\n    \n  }\n\n\napplyFilter(filterValue: string) {\n  filterValue = filterValue.trim(); // Remove whitespace\n  filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n  this.dataSource.filter = filterValue;\n}\n/** Whether the number of selected elements matches the total number of rows. */\nisAllSelected() {\n  const numSelected = this.selection.selected.length;\n  const numRows = this.dataSource.data.length;\n  return numSelected == numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmasterToggle() {\n  this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n}\n\n//Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n\n//Only String (Name)\nStringPress(event: any) {\n  const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n  }\n}\n\n\n\n}\n\n\n//Dialog Box Component\n\n\n@Component({\n  template: `\n  <div matDialogTitle>Manager Registration</div>\n  <mat-dialog-content>\n        <form [formGroup]=\"firstFormGroup\" >\n        <ng-template matStepLabel>Fill out your Details</ng-template>\n        <mat-form-field>\n            <mat-select [(value)]=\"block_id\" placeholder=\"Select Block\" formControlName=\"blockCtrl\" required>\n            <mat-option *ngFor=\"let list of block\" [value]=\"list._id\">{{list.block_name}}</mat-option>\n        </mat-select>\n        <div *ngIf=\"blockCtrl.invalid && (blockCtrl.dirty || blockCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"blockCtrl.errors.required\"><small>Required</small></div>\n      </div>\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"manager_name\" placeholder=\"Manager Name\" (keypress)=\"StringPress($event)\"  formControlName=\"nameCtrl\" required>\n          <div *ngIf=\"nameCtrl.invalid && (nameCtrl.dirty || nameCtrl.touched)\" class=\"text-danger\">\n          <div *ngIf=\"nameCtrl.errors.required\"><small>Required</small></div>\n        </div>\n        </mat-form-field>\n        \n        <mat-form-field>\n        <input matInput [(ngModel)]=\"contact\" #contactinput placeholder=\"Contact\" (keypress)=\"NumPress($event)\" formControlName=\"contactCtrl\" minlength=\"10\" maxlength=\"10\" required>\n        <mat-hint align=\"end\">{{contactinput.value?.length || 0}}/10</mat-hint>\n        <div *ngIf=\"contactCtrl.invalid && (contactCtrl.dirty || contactCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"contactCtrl.errors.required\"><small>Required</small></div>    \n        <div *ngIf=\"contactCtrl.errors.minlength\"><small>Should be 10 Digit</small></div>\n        <div *ngIf=\"contactCtrl.errors.maxlength\"><small>Should be 10 Digit</small></div>\n    </div>\n\n    </mat-form-field>\n\n        <mat-form-field>\n            <input matInput [(ngModel)]=\"email\" placeholder=\"Email\" formControlName=\"emailCtrl\" required>\n            <div *ngIf=\"emailCtrl.invalid && (emailCtrl.dirty || emailCtrl.touched)\" class=\"text-danger\">\n            <div *ngIf=\"emailCtrl.errors.required\"><small>Required</small></div>\n    <div *ngIf=\"(emailCtrl.dirty)\" class=\"text-danger\">        \n    <div *ngIf=\"emailCtrl.errors.email\"><small>Invalid</small></div>\n    </div>\n    </div>\n\n            </mat-form-field>\n             \n    <mat-form-field>\n        <input matInput type=\"password\" [(ngModel)]=\"password\"  #passwordinput placeholder=\"Password\" formControlName=\"passwordCtrl\" required>\n        <mat-hint align=\"end\">{{passwordinput.value?.length || 0}}/[Min 6 -Max 12]</mat-hint>\n        <div *ngIf=\"passwordCtrl.invalid && (passwordCtrl.dirty || passwordCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"passwordCtrl.errors.required\"><small>Required</small></div>\n        <div *ngIf=\"passwordCtrl.errors.minlength\"><small>At least 6 characters long</small></div>\n        <div *ngIf=\"passwordCtrl.errors.maxlength\"><small>Must not exceed 12 characters</small></div>\n      </div>   \n    </mat-form-field>\n\n    <mat-form-field>\n        <input matInput type=\"password\" name=\"confirm_password\" [(ngModel)]=\"confirm_password\" pattern={{this.password}} #confirmpasswrdinput placeholder=\"Confirm Password\" formControlName=\"confirmpasswordCtrl\" minlength=\"6\" maxlength=\"12\" required>\n        <mat-hint align=\"end\">{{confirmpasswrdinput.value?.length || 0}}</mat-hint>\n        <div *ngIf=\"confirmpasswordCtrl.invalid && (confirmpasswordCtrl.dirty || confirmpasswordCtrl.touched)\" class=\"text-danger\">\n        <div *ngIf=\"confirmpasswordCtrl.errors.required\"><small>Re-Enter the Password</small></div>\n        <div *ngIf=\"confirmpasswordCtrl.errors.pattern\"><small>Password is not match</small></div>\n      </div>  \n        </mat-form-field>\n\n    </form>\n    <br>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"pull-right\">\n    <button class=\"btn btn-danger buttoncolor\" style=\"color:white;\" mat-button matDialogClose>Cancle</button>\n        <button type=\"button\" class=\"btn btn-success buttoncolor\" style=\"color:white;\" (click)=\"onSubmitClick()\" mat-button [disabled]=\"!firstFormGroup.valid\" matDialogClose>Submit</button>\n\n  </mat-dialog-actions>`,\n\n})\nexport class TestDialogComponent implements OnInit {\n\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n  superadmin = JSON.parse(localStorage['superadmin']);\n\n  block: Block[];\n\n  block_id: string;\n  charsetOptions: any\n  firstFormGroup: FormGroup;\n\n\n  manager_name : string;\n  email : string;\n  contact: number;\n  password: string;\n  confirm_password : string;\n\n  constructor(   \n    private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddManagerComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n\n        \n  ) {\n\n    this.http.get<Block[]>('https://visitant.herokuapp.com/api/blocklistdetails/' + this.societyadmin.id).subscribe(data => {\n    this.block= data;    \n  });\n\n    this.firstFormGroup = this._formBuilder.group({\n      blockCtrl: ['', Validators.required],\n      nameCtrl: ['', Validators.required],\n      emailCtrl: ['', [Validators.required, Validators.email]],\n      contactCtrl:  ['', Validators.required],\n      passwordCtrl: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]],\n      confirmpasswordCtrl: ['', [Validators.required, Validators.pattern]]\n    });\n\n  }\n  ngOnInit() {\n    this.http.get<Block[]>('https://visitant.herokuapp.com/api/blocklistdetails/' + this.societyadmin.id).subscribe(data => {\n    this.block =  data;\n    console.log(this.block);\n  });\n  }\n\n  get blockCtrl() { return this.firstFormGroup.get('blockCtrl'); }\n  get nameCtrl() { return this.firstFormGroup.get('nameCtrl'); }\n  get emailCtrl() { return this.firstFormGroup.get('emailCtrl'); }\n  get contactCtrl() { return this.firstFormGroup.get('contactCtrl'); }\n  get passwordCtrl() { return this.firstFormGroup.get('passwordCtrl'); }\n  get confirmpasswordCtrl() { return this.firstFormGroup.get('confirmpasswordCtrl'); }\n\n\n\n\n       //Only String (Name)\n       StringPress(event: any) {\n        const pattern = /[a-z\\+\\A-Z\\+\\-\\ ]/;\n    \n        let inputChar = String.fromCharCode(event.charCode);\n        if (event.keyCode != 8 && !pattern.test(inputChar)) {\n          event.preventDefault();\n        }\n      }\n\n\n\n      //Contact Validation\nNumPress(event: any) {\n  const pattern = /[0-9\\+\\-\\ ]/;\n\n  let inputChar = String.fromCharCode(event.charCode);\n  if (event.keyCode != 8 && !pattern.test(inputChar)) {\n    event.preventDefault();\n\n  }\n}\n\n      onSubmitClick(): void {\n        console.log(this.block_id);\n        const manager = {\n          superadmin_id: this.superadmin.id,\n          society_id: this.societyadmin.id,\n          block_id: this.block_id,\n          manager_name: this.manager_name,\n          email : this.email,\n          contact: this.contact,\n          password : this.confirm_password\n        }\n        \n        this.dialogRef.close(manager);\n           \n    \n      }\n\n}\n\ninterface Block {\n  id: any;\n  block_name: string,\n  no_of_flats: number,\n}\n\ninterface Manager{\n  manager_name : string;\n  email : string;\n  contact: number;\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddManagerComponent, TestDialogComponent } from './add-manager.component';\nimport { AddManagerRoutingModule } from './add-manager-routing.module';\nimport { PageHeaderModule } from '../../shared';\nimport { MatInputModule, MatButtonModule, MatSelectModule, MatCardModule, MatPaginatorModule, MatTableModule, MatSortModule, MatDialogModule, MatCheckboxModule, MatTooltipModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule,  } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport {ToasterModule } from 'angular5-toaster';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AddManagerRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PageHeaderModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatTooltipModule,\n    ToasterModule\n\n\n\n  ],\n  entryComponents: [TestDialogComponent],\n  declarations: [AddManagerComponent, TestDialogComponent]\n})\nexport class AddManagerModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/add-manager/add-manager.module.ts"],"sourceRoot":"webpack:///"}