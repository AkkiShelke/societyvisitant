{"version":3,"sources":["/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard-routing.module.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard.component.html","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard.component.scss","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard.component.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"dashboard.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: DashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DashboardRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard-routing.module.ts","module.exports = \"<div [@routerTransition] class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-4 col-lg-6\\\">\\n            <div class=\\\"card text-white bg-primary\\\">\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-xs-3\\\">\\n                            <i class=\\\"fa fa fa-pencil-square-o fa-5x\\\"></i>\\n                        </div>\\n                        <div class=\\\"col col-xs-9 text-right\\\">\\n                            <div class=\\\"d-block\\\">\\\"Total Registerd Flat!\\\"</div>\\n                            <div class=\\\"d-block huge\\\">{{count}}</div>\\n            \\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-footer\\\">\\n                    <a class=\\\"float-left\\\">View Details {{data}}</a>\\n                    <a href=\\\"javascript:void(0)\\\" class=\\\"float-right card-inverse\\\">\\n                         <!-- <span ><i class=\\\"fa fa-arrow-circle-right\\\"></i></span>  -->\\n                    </a>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-xl-4 col-lg-6\\\">\\n            <app-stat [bgClass]=\\\"'danger'\\\" [icon]=\\\"'fa-shield'\\\" [count]=\\\"12\\\" [label]=\\\"'Total Security Guard!'\\\" ></app-stat>\\n        </div>\\n        <div class=\\\"col-xl-4 col-lg-6\\\">\\n            <app-stat [bgClass]=\\\"'success'\\\" [icon]=\\\"'fa-street-view'\\\" [count]=\\\"124\\\" [label]=\\\"'Total Visitors!'\\\" ></app-stat>\\n        </div>\\n        <!-- <div class=\\\"col-xl-3 col-lg-6\\\">\\n            <app-stat [bgClass]=\\\"'danger'\\\" [icon]=\\\"'fa-support'\\\" [count]=\\\"13\\\" [label]=\\\"'New Tickets!'\\\"></app-stat>\\n        </div> -->\\n    </div>\\n    <br>\\n    \\n\\n\\n    <div class=\\\"example-header\\\">\\n      <mat-form-field>\\n        <input  matTooltip=\\\"Search Flat Owner Details!\\\" matTooltipPosition=\\\"above\\\" matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n      </mat-form-field>\\n      <div class=\\\"float-right\\\">\\n          <button class=\\\" btn btn-danger\\\" matTooltip=\\\"Send Message!\\\" matTooltipPosition=\\\"above\\\"><i class=\\\"fa fa-paper-plane\\\"></i></button>\\n  \\n          <button matTooltip=\\\"View Block List!\\\"  matTooltipPosition=\\\"above\\\" routerLink=\\\"/addblock\\\" class=\\\"  btn btn-success buttoncolor\\\" style=\\\"color:white;\\\"><i class=\\\"fa fa-list-ol\\\" ></i>  Block</button>\\n          <button matTooltip=\\\"View Manager List!\\\"  matTooltipPosition=\\\"above\\\" routerLink=\\\"/addmanager\\\" class=\\\"  btn btn-primary buttoncolor\\\" style=\\\"color:white;\\\"><i class=\\\"fa fa-list-ol\\\" ></i>  Manager</button>\\n          <button matTooltip=\\\"View Chairman List!\\\"  matTooltipPosition=\\\"above\\\" routerLink=\\\"/addchairman\\\" class=\\\"  btn btn-warning buttoncolor\\\" style=\\\"color:white;\\\"><i class=\\\"fa fa-list-ol\\\" ></i>  Chairman</button>\\n          <button matTooltip=\\\"View Security List!\\\"  matTooltipPosition=\\\"above\\\" routerLink=\\\"/addsecurity\\\" class=\\\" btn btn-danger buttoncolor\\\" style=\\\"color:white;\\\"><i class=\\\"fa fa-list-ol\\\" ></i> Security</button>\\n          <button matTooltip=\\\"Register Flat Owner!\\\"  matTooltipPosition=\\\"above\\\" routerLink=\\\"/addflatowner\\\" class=\\\" btn btn-danger buttoncolor\\\" style=\\\"color:white;\\\"><i class=\\\"fa fa-plus\\\" ></i> Add Flat</button>\\n  \\n  \\n      </div>\\n  \\n  </div>\\n    \\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n    \\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n    \\n         <!-- Checkbox Column -->\\n      <ng-container matColumnDef=\\\"select\\\">\\n          <mat-header-cell *matHeaderCellDef>\\n            <mat-checkbox matTooltip=\\\"Select All Rows!\\\" matTooltipPosition=\\\"above\\\"  (change)=\\\"$event ? masterToggle() : null\\\"\\n                          [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                          [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n            </mat-checkbox>\\n          </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\">\\n            <mat-checkbox matTooltip=\\\"Select This Row!\\\" matTooltipPosition=\\\"above\\\"  (click)=\\\"$event.stopPropagation()\\\"\\n                          (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                          [checked]=\\\"selection.isSelected(row)\\\">\\n            </mat-checkbox>\\n          </mat-cell>\\n        </ng-container>\\n  \\n        <!-- Block Column -->\\n        <ng-container matColumnDef=\\\"block\\\">\\n          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Block</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.Flat_id.Chairman_id.Manager_id.Block_id.block_name}} </mat-cell>\\n        </ng-container>\\n    \\n        <!-- Flat No Column -->\\n        <ng-container matColumnDef=\\\"flat_no\\\">\\n          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Flat No</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.Flat_id.flat_no}} </mat-cell>\\n        </ng-container>\\n    \\n        <!-- Floor Column -->\\n        <ng-container matColumnDef=\\\"floor\\\">\\n          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Floor</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.floor\\\"> {{row.Flat_id.floor_no}} </mat-cell>\\n        </ng-container>\\n  \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"owner_name\\\">\\n          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.owner_name\\\"> {{row.flatowner_name}} </mat-cell>\\n          </ng-container>\\n          \\n  \\n           <!-- Status Column -->\\n  \\n         <ng-container matColumnDef=\\\"flat_status\\\">\\n            <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\" >\\n              \\n                               \\n                <mat-slide-toggle checked={{row.flatowner_status}} (click)=\\\"changeStatus(row.flatowner_status,row._id)\\\" color=\\\"primary\\\" matTooltip=\\\"change the status!\\\" matTooltipPosition=\\\"above\\\">Active</mat-slide-toggle>\\n            \\n            </mat-cell>\\n            </ng-container>\\n                      \\n  \\n          <!-- Contact Column -->\\n        <ng-container matColumnDef=\\\"owner_contact\\\">\\n          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Contact</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.owner_contact\\\"> {{row.contact}} </mat-cell>\\n        </ng-container>\\n  \\n          <!-- Details Column -->\\n          <ng-container matColumnDef=\\\"details\\\">\\n          <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Details</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.details\\\">\\n            <button matTooltip=\\\"View Flat Owner's Details!\\\"  matTooltipPosition=\\\"above\\\" routerLink=\\\"/flatowner_details\\\" class=\\\"btn btn-primary buttoncolor\\\" style=\\\"color:white;\\\"><i  class=\\\"fa fa-eye\\\"></i> View</button>\\n          </mat-cell>\\n          </ng-container>\\n    \\n        <mat-header-row class=\\\"headertext\\\" *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </mat-row>\\n      </mat-table>\\n    \\n      <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n    </div>\\n  \\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/layout/dashboard/dashboard.component.html\n// module chunks = dashboard.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px; }\\n\\n.example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 35%; }\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n\\n.headertext {\\n  font-size: large;\\n  font-size: 12px;\\n  font-style: bold;\\n  color: black; }\\n\\n.mat-cell {\\n  font-size: 11px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard.component.scss\n// module id = ../../../../../src/app/layout/dashboard/dashboard.component.scss\n// module chunks = dashboard.module","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { FormControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    animations: [routerTransition()]\n})\nexport class DashboardComponent  {\n  displayedColumns = ['select', 'block', 'flat_no', 'floor', 'owner_name', 'flat_status', 'owner_contact', 'details'];\n  societyadmin = JSON.parse(localStorage['societyadmin']);\n  \n  response;\n\n  dataSource: MatTableDataSource<FlatDetails>;\n  selection = new SelectionModel<FlatDetails>(true, []);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  flatdetails: FlatDetails[];\n\n  constructor(\n    private http: HttpClient,\n\n    private _formBuilder: FormBuilder\n  ) {\n\n    this.getFlatownerData();\n\n   }\n\n   getFlatownerData(){\n\n    this.http.get<FlatDetails[]>('api/flatownerlistdetails/' + this.societyadmin.id).subscribe(data=> {\n      this.flatdetails = data;  \n      console.log(this.flatdetails);\n      this.dataSource = new MatTableDataSource(this.flatdetails);\n     this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    });\n  \n  }\n\n  ngOnInit() {\n    \n  }\n  changeStatus(flat,id){\n\n    flat=! flat;\n     const flat_details ={\n      status: flat\n     };\n     console.log(flat_details);\n\n     \n    this.http.put<FlatDetails[]>('api/updateflatownerstatus/' + id , flat_details).subscribe(data=> {\n         console.log(data)  });\n         this.getFlatownerData();\n\n\n  }\n\napplyFilter(filterValue: string) {\n  filterValue = filterValue.trim(); // Remove whitespace\n  filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n  this.dataSource.filter = filterValue;\n}\n/** Whether the number of selected elements matches the total number of rows. */\nisAllSelected() {\n  const numSelected = this.selection.selected.length;\n  const numRows = this.dataSource.data.length;\n  return numSelected == numRows;\n}\n\n/** Selects all rows if they are not all selected; otherwise clear selection. */\nmasterToggle() {\n  this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n}\n\n}\nexport interface FlatDetails{\n \n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbCarouselModule, NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { MatTooltipModule, MatInputModule, MatFormFieldModule, MatTableModule, MatPaginatorModule, MatSortModule, MatCheckboxModule, MatSlideToggleModule, MatCardModule} from '@angular/material';\nimport { StatModule } from '../../shared';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        DashboardRoutingModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatCardModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatPaginatorModule,\n        MatTableModule,\n        MatSortModule,\n        MatTooltipModule,\n        MatSlideToggleModule,\n        StatModule,\n        HttpClientModule\n\n        \n    ],\n\n    declarations: [\n        DashboardComponent\n    ]\n})\nexport class DashboardModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/dashboard/dashboard.module.ts"],"sourceRoot":"webpack:///"}