{"version":3,"sources":["/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list-routing.module.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list.component.html","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list.component.scss","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list.component.ts","/home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list.module.ts"],"names":[],"mappings":"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","file":"visitor-list.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VisitorListComponent } from './visitor-list.component';\n\nconst routes: Routes = [\n  {\n      path: '',\n      component: VisitorListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VisitorListRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list-routing.module.ts","module.exports = \"<div [@routerTransition] class=\\\"container-fluid\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xl-12\\\">\\n        <ol class=\\\"breadcrumb\\\">\\n\\n            <li class=\\\"breadcrumb-item active\\\"><i class=\\\"fa fa-home\\\"></i> Visitor List</li>\\n        </ol>\\n    </div>\\n</div>\\n<div class=\\\"example-header\\\">\\n    <mat-form-field>\\n      <input  matTooltip=\\\"Search Visitor's Details!\\\" matTooltipPosition=\\\"above\\\" matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n    </mat-form-field>\\n    <div class=\\\"pull-right\\\">\\n      <button class=\\\" btn btn-danger\\\" matTooltip=\\\"Send Message!\\\" matTooltipPosition=\\\"above\\\"><i class=\\\"fa fa-paper-plane\\\"></i></button>\\n\\n    </div>\\n\\n\\n</div>\\n  \\n  <div class=\\\"example-container mat-elevation-z8\\\">\\n  \\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  \\n       <!-- Checkbox Column -->\\n    <ng-container matColumnDef=\\\"select\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <mat-checkbox color=\\\"primary\\\" matTooltip=\\\"Select All Rows!\\\" matTooltipPosition=\\\"above\\\"  (change)=\\\"$event ? masterToggle() : null\\\"\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\n          </mat-checkbox>\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\">\\n          <mat-checkbox color=\\\"primary\\\" matTooltip=\\\"Select This Row!\\\" matTooltipPosition=\\\"above\\\"  (click)=\\\"$event.stopPropagation()\\\"\\n                        (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                        [checked]=\\\"selection.isSelected(row)\\\">\\n          </mat-checkbox>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <!-- ID Column -->\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n      </ng-container>\\n  \\n      <!-- Block Column -->\\n      <ng-container matColumnDef=\\\"block\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Block</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.block}} </mat-cell>\\n      </ng-container>\\n  \\n      <!-- Flat No Column -->\\n      <ng-container matColumnDef=\\\"flat_no\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Flat No</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.flat_no}} </mat-cell>\\n      </ng-container>\\n  \\n      <!-- Floor Column -->\\n      <ng-container matColumnDef=\\\"floor\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Floor</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.floor\\\"> {{row.floor}} </mat-cell>\\n      </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"owner_name\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.owner_name\\\"> {{row.owner_name}} </mat-cell>\\n        </ng-container>\\n        \\n\\n         <!-- Status Column -->\\n      <ng-container matColumnDef=\\\"flat_status\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.flat_status\\\"> {{row.flat_status}} </mat-cell>\\n      </ng-container>\\n\\n\\n        <!-- Contact Column -->\\n      <ng-container matColumnDef=\\\"owner_contact\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Contact</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.owner_contact\\\"> {{row.owner_contact}} </mat-cell>\\n      </ng-container>\\n\\n        <!-- Details Column -->\\n        <ng-container matColumnDef=\\\"details\\\">\\n        <mat-header-cell class=\\\"headertext\\\" *matHeaderCellDef mat-sort-header>Details</mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [style.color]=\\\"row.details\\\">\\n          <button matTooltip=\\\"View Flat Owner's Details!\\\"  matTooltipPosition=\\\"above\\\" routerLink=\\\"/society_details\\\" class=\\\"btn btn-primary buttoncolor\\\" style=\\\"color:white;\\\"><i  class=\\\"fa fa-eye\\\"></i> View</button>\\n        </mat-cell>\\n        </ng-container>\\n  \\n      <mat-header-row class=\\\"headertext\\\" *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </mat-row>\\n    </mat-table>\\n  \\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list.component.html\n// module id = ../../../../../src/app/layout/visitor-list/visitor-list.component.html\n// module chunks = visitor-list.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  min-width: 300px; }\\n\\n.example-header {\\n  min-height: 64px;\\n  padding: 8px 24px 0; }\\n\\n.mat-form-field {\\n  font-size: 12px;\\n  width: 50%; }\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px; }\\n\\n.headertext {\\n  font-size: large;\\n  font-style: bold;\\n  font-size: 12px;\\n  color: black; }\\n\\n.mat-column-select {\\n  overflow: visible; }\\n\\n.mat-cell {\\n  font-size: 11px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list.component.scss\n// module id = ../../../../../src/app/layout/visitor-list/visitor-list.component.scss\n// module chunks = visitor-list.module","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport { FormControl, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-visitor-list',\n  templateUrl: './visitor-list.component.html',\n  styleUrls: ['./visitor-list.component.scss'],\n  animations: [routerTransition()]\n\n})\nexport class VisitorListComponent  {\n\n  displayedColumns = ['select', 'id', 'block', 'flat_no', 'floor', 'owner_name', 'flat_status', 'owner_contact', 'details'];\n  dataSource: MatTableDataSource<UserData>;\n\n  selection = new SelectionModel<UserData>(true, []);\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users: UserData[] = [];\n    for (let i = 1; i <= 100; i++) { users.push(createNewUser(i)); }\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  /**\n   * Set the paginator and sort after the view init since this component will\n   * be able to query its view for the initialized paginator and sort.\n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n\n        /** Whether the number of selected elements matches the total number of rows. */\n        isAllSelected() {\n          const numSelected = this.selection.selected.length;\n          const numRows = this.dataSource.data.length;\n          return numSelected == numRows;\n        }\n    \n        /** Selects all rows if they are not all selected; otherwise clear selection. */\n        masterToggle() {\n          this.isAllSelected() ?\n              this.selection.clear() :\n              this.dataSource.data.forEach(row => this.selection.select(row));\n        }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name =\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n  const status =\n      STATUS[Math.round(Math.random() * (STATUS.length - 1))];\n      const block =\n      BLOCK[Math.round(Math.random() * (BLOCK.length - 1))];\n      const floor =\n      FLOOR[Math.round(Math.random() * (FLOOR.length - 1))];\n  return {\n    id: id.toString(),\n    block: block,\n    flat_no: Math.round(Math.random() * 100).toString(),\n    floor: floor,\n    owner_name: name,\n    flat_status: status,\n    owner_contact: Contact\n  };\n}\n\n/** Constants used to fill up our data base. */\nconst LOCATION = ['Warje', 'Banner', 'Shivne', 'Kothroad', 'Hinjwadi', 'Karve nager', 'Ram nager'];\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n  const STATUS = ['Owner', 'Rented'];\n  const BLOCK = ['A','B','C','D'];\n  const FLOOR = ['1st','2nd','3rd','4th', '5th', '6th', '7th', '8th','9th'];\n  const Pincode = [ 411057];\nconst Contact = [9434534344];\n\nexport interface UserData {\n  id: string;\n  block: string;\n  flat_no: string;\n  floor: string;\n  owner_name: string;\n  flat_status: string;\n  owner_contact: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisitorListComponent } from './visitor-list.component';\nimport { VisitorListRoutingModule } from './visitor-list-routing.module';\nimport { MatInputModule, MatFormFieldModule, MatTableModule, MatPaginatorModule,\n  MatSortModule, MatCardModule, MatCheckboxModule, MatTooltipModule} from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VisitorListRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatSortModule,\n    MatTooltipModule\n  ],\n  declarations: [VisitorListComponent]\n})\nexport class VisitorListModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cybercode1/Documents/Society_Visitant_deployed/angular-src/src/app/layout/visitor-list/visitor-list.module.ts"],"sourceRoot":"webpack:///"}